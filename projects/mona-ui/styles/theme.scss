@import '~@angular/cdk/overlay-prebuilt.css';

*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Roboto', sans-serif;
    font-weight: 400;
}

*::selection,
*::-moz-selection {
    background-color: var(--mona-primary-dark) !important;
    color: var(--mona-text) !important;
}

@mixin active-background {
    &:active {
        background-color: var(--mona-background-darker);
    }
}

@mixin background-transition {
    &, &:hover, &:focus {
        transition: background-color 0.15s ease-in-out, color 0.15s ease-in-out;
    }
}

@mixin disabled {
    pointer-events: none;
    opacity: 0.5;
    cursor: default;
    background-color: var(--mona-background-dark);
}

@mixin focus-transition {
    &:focus, &:focus-within {
        transition: box-shadow 0.15s ease-in-out;
    }
}

@mixin focus-shadow {
    &:focus, &:focus-within {
        box-shadow: 0 0 2px 0 var(--mona-shadow-color);
    }
}

@mixin focus-styles {
    @include focus-shadow;
    @include focus-transition;
}

@mixin hover-background {
    &:hover {
        background-color: var(--mona-background-dark);
    }
}

/** General **/
.mona-no-animation {
    &, & * {
        transition: none !important;
    }
}

.mona-focused {
    @include focus-shadow;
}

/** Shared Components **/
.mona-input-selector {
    width: auto;
    height: var(--mona-input-height);
    border: 1px solid var(--mona-border-color);
    background: var(--mona-background);
    color: var(--mona-text);
    cursor: pointer;
    display: flex;
    outline: none;
    @include hover-background;
    @include active-background;
    @include focus-shadow;
}

.mona-input-selector-value {
    display: flex;
    align-items: center;
    white-space: nowrap;
    padding: 0 8px;
    flex: 1;
}

.mona-input-selector-icon {
    width: var(--mona-input-height);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--mona-text);
}



ul.mona-list {
    //background: var(--mona-background);
    & li {
        @include hover-background;
        color: var(--mona-text);

        &:active:not(.mona-selected) {
            @include active-background;
        }

        &.mona-selected {
            background-color: var(--mona-primary);
        }

        // TODO: Update this to a better visual style
        &.mona-highlighted {
            border: 1px solid darkgray;
        }

        &.mona-disabled {
            @include disabled;
        }
    }
}

li.mona-list-group-header {
    background-color: var(--mona-background-dark);
    border-top: 1px solid var(--mona-border-color);
    border-bottom: 0.5px solid var(--mona-border-color);
}

.mona-list-popup-content {
    padding: 0 !important;
    border-top: none !important;
}

/** Buttons */

/** Button */
button[monaButton] {
    min-width: var(--mona-input-height); // default is square
    min-height: var(--mona-input-height);
    padding: 0 10px;
    background-color: var(--mona-background);
    color: var(--mona-text);
    border: 1px solid var(--mona-border-color);
    outline: none;
    user-select: none;

    &.primary {
        background-color: var(--mona-primary);
        color: var(--mona-background);
        border: 1px solid var(--mona-primary);
        &.selected {
            background-color: var(--mona-primary-dark);
            color: var(--mona-background-light);
        }
    }

    &.selected {
        background: var(--mona-primary);
        color: var(--mona-background);
    }

    &.disabled {
        @include disabled;
    }

    @include background-transition;

    &:not(.selected) {
        @include hover-background;
        @include active-background;
    }

    @include focus-styles;

}

/** Button Group */
mona-button-group button[monaButton] {
    &:not(:last-child) {
        border-right: none;
    }
}

/** Chip */
.mona-chip {
    background-color: var(--mona-background);
    color: var(--mona-text);
    border: 1px solid var(--mona-border-color);

    &.disabled {
        @include disabled;
    }

    @include focus-styles;
}

.mona-chip-close {
    background-color: var(--mona-background-dark);
    color: var(--mona-text);
    border-left: 1px solid var(--mona-border-color);
    font-size: 14px;

    @include background-transition;

    &:hover {
        background-color: var(--mona-background-darker);
    }
    &:active {
        background-color: var(--mona-background-darker-2);
    }
}

/** Split Button */
.mona-split-button-popup {
    & ul li {
        height: var(--mona-input-height) !important;
    }
}


/** Dropdowns */

.mona-dropdown {
    width: 100%;
}

/** Combo Box */
.mona-combo-box {
    & .mona-input-selector-value {
        & mona-text-box {
            box-shadow: none;
            & div:first-child {
                border-left: none;
            }
        }
    }
}


/** Dropdown List */
.mona-dropdown-list {
    &.mona-disabled {
        @include disabled;
    }
}

.mona-dropdown-no-data {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100px;
    font-size: 14px;
    color: var(--mona-disabled-color);
}

.mona-dropdown-popup-content {
    flex-direction: column;
    user-select: none;
    padding: 0 !important;
    overflow: hidden auto;
    border-top: 1px solid transparent !important;
    max-height: 250px;

    & mona-text-box.filter-box {
        & div.mona-text-box {
            border: none;
            & > span {
                border-right: none;
            }
        }
    }
}

/** Multi Select */
.mona-multi-select {
    & .mona-input-selector-value {
        & mona-text-box {
            box-shadow: none;
            & div:first-child {
                border: none;
                height: calc(var(--mona-input-height) - 2px);
            }
        }
        & mona-chip {
            & div.mona-chip {
                margin-top: 1px;
                height: calc(var(--mona-input-height) - 6px);
            }
        }
    }
}

/** Inputs */

/** Check Box */
input[type="checkbox"][monaCheckBox] {
    display: none;
    & + label {
        display: flex;
        align-items: center;
        cursor: pointer;
        color: var(--mona-text);
        font-size: 1.1rem;
        user-select: none;
        &:before {
            content: "\2714";
            background-color: var(--mona-background);
            border: 1px solid var(--mona-border-color);
            border-radius: 0;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: calc(var(--mona-input-height) - 8px);
            height: calc(var(--mona-input-height) - 8px);
            margin-right: 4px;
            vertical-align: middle;
            color: transparent;
            transition:background-color 0.15s ease-out, color 0.15s ease-out, border 0.15s ease-out;
        }
        &:active:before:not(:disabled) {
            box-shadow: 0 0 10px -3px var(--mona-shadow-color);
        }
    }
    &:checked + label:before {
        background-color: var(--mona-primary-dark);
        color: var(--mona-text);
        padding-bottom: 2px;
        padding-right: 1px;
        font-weight: bold;
        font-size: 1.1rem;
    }
    &:disabled + label {
        cursor: default;
        pointer-events: none;
    }
    &:disabled + label:before {
        cursor: default;
        pointer-events: none;
        @include disabled;
        border: 1px solid var(--mona-border-color);
    }
    &:checked:disabled + label:before {
        background-color: var(--mona-disabled-color);
        color: var(--mona-disabled-color);
        @include disabled;
        border: 1px solid var(--mona-border-color);
    }
    &:indeterminate + label:before {
        content: " ";
        background-color: var(--mona-primary);
        color: var(--mona-background);
        border: 3px solid var(--mona-background);
    }
    &:indeterminate:disabled + label:before {
        @include disabled;
        border: 3px solid var(--mona-border-color);
    }
}

/** Color Palette */
.mona-color-palette {
    //background-color: var(--mona-background);
    //border: 1px solid var(--mona-border-color);
    & > div.mona-color-cell {
        border: 2px solid black;
        &.mona-selected {
            border: 1px solid lightgray;
            width: calc(100% + 2px);
            height: calc(100% + 2px);
            margin-left: -1px;
            margin-top: -1px;
        }
        &:hover:not(.mona-selected) {
            border: 1px solid black;
        }
    }
}

/** Color Picker */
.mona-color-picker {
    border: 1px solid var(--mona-border-color);
    background: var(--mona-background);
    & > div:first-child {
        border: 1px solid black;
    }
    & > button {
        color: var(--mona-text);
    }
}

.mona-color-picker-popup {
    padding: 2px !important;
}

/** Numeric Text Box */
.mona-numeric-text-box {
    background-color: var(--mona-background);
    border: 1px solid var(--mona-border-color);
    &:active, &:focus, &:focus-within {
       box-shadow: var(--mona-active-shadow);
    }
    &.mona-disabled {
        @include disabled;
    }
}

/** Radio Button */
input[type="radio"][monaRadioButton] {
    display: none;
    & + label {
        display: flex;
        align-items: center;
        cursor: pointer;
        color: var(--mona-text);
        font-size: 1.1rem;
        user-select: none;
        &:before {
            content: " ";
            background-color: var(--mona-background);
            border: 3px solid var(--mona-background);
            border-radius: 50%;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: calc(var(--mona-input-height) - 8px);
            height: calc(var(--mona-input-height) - 8px);
            margin-right: 4px;
            vertical-align: middle;
            color: transparent;
            transition: all 0.15s ease-out, border 0.1s ease-out;
        }
        &:active:before:not(:disabled) {
            box-shadow: var(--mona-active-shadow);
        }
    }
    &:disabled + label {
        cursor: default;
        pointer-events: none;
    }
    &:disabled + label:before {
        @include disabled;
        border: 3px solid var(--mona-border-color);
    }
    &:not(:disabled) + label:before {
        border: 1px solid var(--mona-border-color);
    }
    &:checked + label:before {
        content: " ";
        background-color: var(--mona-primary-dark);
        color: var(--mona-text);
        border-width: 3px;
    }
    &:checked:disabled + label:before {
        @include disabled;
        background-color: var(--mona-primary-dark);
        border: 3px solid var(--mona-border-color);
    }
}

/** Slider */
.mona-slider {
    & .mona-slider-highlight {
        background-color: var(--mona-primary);
    }
    & .mona-slider-handler {
        background-color: var(--mona-primary);
        border: 1px solid var(--mona-border-color);
        &:focus,
        &:active {
            box-shadow: var(--mona-active-shadow);
        }
    }
    &.mona-slider-horizontal {
        & .mona-slider-track {
            background-color: var(--mona-background);
            border: 1px solid var(--mona-border-color);
        }
        & .mona-slider-tick-list {
            & span.mona-slider-tick.mona-slider-tick-visible {
                &:first-child {
                    border-left: 1px solid var(--mona-border-color);
                }
                &:last-child {
                    border-right: 1px solid var(--mona-border-color);
                }
                &:nth-child(even) {
                    border-right: 1px solid var(--mona-border-color);
                }
            }
        }
        & .mona-slider-tick-label-list {
            & span.mona-slider-tick-label {
                color: var(--mona-text);
            }
        }
    }
    &.mona-slider-vertical {
        & .mona-slider-track {
            background-color: var(--mona-background);
            border: 1px solid var(--mona-border-color);
        }
        & .mona-slider-tick-list {
            & span.mona-slider-tick.mona-slider-tick-visible {
                &:first-child {
                    border-top: 1px solid var(--mona-border-color);
                }
                &:last-child {
                    border-bottom: 1px solid var(--mona-border-color);
                }
                &:nth-child(even) {
                    border-bottom: 1px solid var(--mona-border-color);
                }
            }
        }
        & .mona-slider-tick-label-list {
            & span.mona-slider-tick-label {
                color: var(--mona-text);
            }
        }
    }
}

/** Switch */
.mona-switch {
    background-color: var(--mona-background);
    border: 1px solid var(--mona-border-color);
    &.mona-switch-active {
        & .mona-switch-handle {
            background-color: var(--mona-primary-dark);
        }
    }
}

.mona-switch-label {
    color: var(--mona-text);
}

.mona-switch-handle {
    background-color: var(--mona-background-light);
    border: 1px solid var(--mona-border-color);
    &:active:not(:disabled),
    &:focus-within:not(:disabled),
    &:focus:not(:disabled) {
        box-shadow: 0 0 10px -3px var(--mona-shadow-color);
    }
}

/** Text Area */
textarea[monaTextArea] {
    padding: 4px;
    background-color: var(--mona-background);
    color: var(--mona-text);
    border: 1px solid var(--mona-border-color);
    outline: none;
    min-height: var(--mona-input-height);
    overflow: auto;
    resize: both;
    transition: box-shadow 0.15s ease-in-out;
    &:focus:not(:disabled),
    &:focus-within:not(:disabled),
    &:active:not(:disabled) {
        box-shadow: 0 0 10px -3px var(--mona-shadow-color);
    }
    &[disabled] {
        @include disabled;
    }
}

/** Text Box */

input[monaTextBox] {
    height: var(--mona-input-height);
    padding: 2px 4px;
    border: 1px solid var(--mona-border-color);
    outline: none;
    background-color: var(--mona-background);
    color: var(--mona-text);
    transition: box-shadow 0.15s ease-in-out;
    &:focus:not(:disabled),
    &:focus-within:not(:disabled),
    &:active:not(:disabled) {
        box-shadow: 0 0 10px -3px var(--mona-shadow-color);
    }
    &[disabled] {
        @include disabled;
    }
}

.mona-text-box {
    background-color: var(--mona-background);
    border: 1px solid var(--mona-border-color);
    transition: box-shadow 0.15s ease-in-out;
    &:active, &:focus, &:focus-within {
        box-shadow: 0 0 10px -3px var(--mona-shadow-color);
    }
    & span.mona-text-box-prefix,
    & span.mona-text-box-suffix {
        color: var(--mona-text);
        &.mona-disabled {
            @include disabled;
        }
    }
    span.mona-text-box-prefix {
        border-right: 1px solid var(--mona-border-color);
    }
    span.mona-text-box-suffix {
        border-left: 1px solid var(--mona-border-color);
    }
}


/** Menu */
/** Context Menu */
.mona-contextmenu-content {
    user-select: none;
    padding: 4px 0 !important;
}

.mona-contextmenu-item {
    @include hover-background;
    @include background-transition;
    &:active {
        background-color: var(--mona-primary);
    }
}

.mona-contextmenu-list-item {
    &.disabled {
        @include disabled;
        background-color: inherit;
    }
    &.focused {
        background-color: var(--mona-background-dark);
    }
}


/** Popup */
.mona-popup-content {
    background-color: var(--mona-background);
    color: var(--mona-text);
    border: 1px solid var(--mona-border-color);
    padding: 8px 10px;
    box-shadow: var(--mona-popup-shadow);
}
