@import '~@angular/cdk/overlay-prebuilt.css';

*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Roboto', sans-serif;
}

@mixin active-background {
    &:active {
        background-color: var(--mona-background-darker);
    }
}

@mixin background-transition {
    &, &:hover, &:focus {
        transition: background-color 0.15s ease-in-out, color 0.15s ease-in-out;
    }
}

@mixin disabled {
    pointer-events: none;
    opacity: 0.5;
    background-color: var(--mona-background-dark);
}

@mixin focus-transition {
    &:focus, &:focus-within {
        transition: box-shadow 0.15s ease-in-out;
    }
}

@mixin focus-shadow {
    &:focus, &:focus-within {
        box-shadow: 0 0 2px 0 var(--mona-shadow-color);
    }
}

@mixin focus-styles {
    @include focus-shadow;
    @include focus-transition;
}

@mixin hover-background {
    &:hover {
        background-color: var(--mona-background-dark);
    }
}


/** General **/
span.mona-close-icon {
    //content: "x";
    //font-size: 12px;
    //background-color: var(--mona-background-darker);
    //border-radius: 50%;
    //border: 1px solid transparent;
}


/** Buttons */

/** Button */
button[monaButton] {
    min-width: var(--mona-input-height); // default is square
    min-height: var(--mona-input-height);
    padding: 0 10px;
    background-color: var(--mona-background);
    color: var(--mona-text);
    border: 1px solid var(--mona-border-color);
    outline: none;
    user-select: none;
    //font-size: 1.2rem;

    &.primary {
        background-color: var(--mona-primary);
        color: var(--mona-background);
        border: 1px solid var(--mona-primary);
        &.selected {
            background-color: var(--mona-primary-dark);
            color: var(--mona-background-light);
        }
    }

    &.selected {
        background: var(--mona-primary);
        color: var(--mona-background);
    }

    &.disabled {
        @include disabled;
    }

    @include background-transition;

    &:not(.selected) {
        @include hover-background;
        @include active-background;
    }

    @include focus-styles;

}

/** Button Group */
mona-button-group button[monaButton] {
    &:not(:last-child) {
        border-right: none;
    }
}

/** Chip */
.mona-chip {
    background-color: var(--mona-background);
    color: var(--mona-text);
    border: 1px solid var(--mona-border-color);

    &.disabled {
        @include disabled;
    }

    @include focus-styles;
}

.mona-chip-close {
    background-color: var(--mona-background-dark);
    color: var(--mona-text);
    border-left: 1px solid var(--mona-border-color);
    font-size: 14px;

    @include background-transition;

    &:hover {
        background-color: var(--mona-background-darker);
    }
    &:active {
        background-color: var(--mona-background-darker-2);
    }
}


/** Menu */
/** Context Menu */
.mona-contextmenu-content {
    user-select: none;
    padding: 4px 0 !important;
}

.mona-contextmenu-item {
    @include hover-background;
    @include background-transition;
    &:active {
        background-color: var(--mona-primary);
    }
}

.mona-contextmenu-list-item {
    &.disabled {
        @include disabled;
        background-color: inherit;
    }
    &.focused {
        background-color: var(--mona-background-dark);
    }
}


/** Popup */
.mona-popup-content {
    background-color: var(--mona-background);
    color: var(--mona-text);
    border: 1px solid var(--mona-border-color);
    padding: 8px 10px;
    box-shadow: var(--mona-popup-shadow);
}
