import { ElementRef, EventEmitter, OnDestroy, OnInit } from "@angular/core";
import { Subject } from "rxjs";
import { FocusMonitor } from "@angular/cdk/a11y";
import { Action } from "../../../../../utils/Action";
import { ControlValueAccessor } from "@angular/forms";
import { IconDefinition } from "@fortawesome/free-solid-svg-icons";
import * as i0 from "@angular/core";
type Sign = "-" | "+";
export declare class NumericTextBoxComponent implements OnInit, OnDestroy, ControlValueAccessor {
    private readonly elementRef;
    private readonly focusMonitor;
    private readonly componentDestroy$;
    private readonly specialKeys;
    private propagateChange;
    readonly decreaseIcon: IconDefinition;
    readonly increaseIcon: IconDefinition;
    componentValue: number | null;
    spin$: Subject<Sign>;
    spinStop$: Subject<void>;
    value$: Subject<string>;
    visibleValue: string | number;
    decimals?: number;
    disabled: boolean;
    formatter: Action<number | null, string>;
    inputBlur: EventEmitter<Event>;
    inputFocus: EventEmitter<Event>;
    max?: number;
    min?: number;
    readonly: boolean;
    spinners: boolean;
    step: number;
    set value(value: number | null);
    get value(): number | null;
    valueChange: EventEmitter<number | null>;
    valueTextBoxRef: ElementRef<HTMLInputElement>;
    constructor(elementRef: ElementRef<HTMLElement>, focusMonitor: FocusMonitor);
    private static calculate;
    private static getPrecision;
    private static isNumeric;
    decrease(): void;
    increase(): void;
    ngOnDestroy(): void;
    ngOnInit(): void;
    onKeydown(event: KeyboardEvent): void;
    onMouseWheel(event: WheelEvent): void;
    onPaste(event: ClipboardEvent): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    writeValue(obj: number | string | null | undefined): void;
    private containsExcessiveDecimalPlaces;
    private focus;
    private preventInvalidMinusSign;
    private setSubscriptions;
    private updateValue;
    static ɵfac: i0.ɵɵFactoryDeclaration<NumericTextBoxComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NumericTextBoxComponent, "mona-numeric-text-box", never, { "decimals": { "alias": "decimals"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "formatter": { "alias": "formatter"; "required": false; }; "max": { "alias": "max"; "required": false; }; "min": { "alias": "min"; "required": false; }; "readonly": { "alias": "readonly"; "required": false; }; "spinners": { "alias": "spinners"; "required": false; }; "step": { "alias": "step"; "required": false; }; "value": { "alias": "value"; "required": false; }; }, { "inputBlur": "inputBlur"; "inputFocus": "inputFocus"; "valueChange": "valueChange"; }, never, never, false, never>;
}
export {};
