import { AfterViewInit, ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges, TemplateRef } from "@angular/core";
import { PopupListItem } from "../../data/PopupListItem";
import { SelectionMode } from "../../../models/SelectionMode";
import { PopupListService } from "../../services/popup-list.service";
import { Subject } from "rxjs";
import { PopupListItemComponent } from "../popup-list-item/popup-list-item.component";
import { PopupListValueChangeEvent } from "../../data/PopupListValueChangeEvent";
import { IconDefinition } from "@fortawesome/free-solid-svg-icons";
import * as i0 from "@angular/core";
export declare class PopupListComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {
    readonly popupListService: PopupListService;
    private readonly cdr;
    private readonly componentDestroy$;
    readonly filterIcon: IconDefinition;
    readonly filter$: Subject<string>;
    filterable: boolean;
    groupField?: string;
    groupTemplate?: TemplateRef<any>;
    set highlightedValues(values: any[]);
    itemTemplate?: TemplateRef<any>;
    navigable: boolean;
    popupListItemComponents: QueryList<PopupListItemComponent>;
    selectionMode: SelectionMode;
    textField?: string;
    value: any[];
    valueChange: EventEmitter<PopupListValueChangeEvent>;
    valueField?: string;
    constructor(popupListService: PopupListService, cdr: ChangeDetectorRef);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    ngOnInit(): void;
    onListItemClick(item: PopupListItem, event: MouseEvent): void;
    private findListItemComponent;
    private scrollToItem;
    private setEvents;
    private setSubscriptions;
    private updateHighlightedValues;
    private updateSelectedValues;
    static ɵfac: i0.ɵɵFactoryDeclaration<PopupListComponent, [{ skipSelf: true; }, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PopupListComponent, "mona-popup-list", never, { "filterable": { "alias": "filterable"; "required": false; }; "groupField": { "alias": "groupField"; "required": false; }; "highlightedValues": { "alias": "highlightedValues"; "required": false; }; "navigable": { "alias": "navigable"; "required": false; }; "selectionMode": { "alias": "selectionMode"; "required": false; }; "textField": { "alias": "textField"; "required": false; }; "value": { "alias": "value"; "required": false; }; "valueField": { "alias": "valueField"; "required": false; }; }, { "valueChange": "valueChange"; }, ["groupTemplate", "itemTemplate"], never, true, never>;
}
