import { ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, OnInit, SimpleChanges, TemplateRef } from "@angular/core";
import { AbstractDropDownListComponent } from "../../../../components/abstract-drop-down-list/abstract-drop-down-list.component";
import { PopupListService } from "../../../../services/popup-list.service";
import { PopupService } from "../../../../../popup/services/popup.service";
import { SelectionMode } from "../../../../../models/SelectionMode";
import { PopupListItem } from "../../../../data/PopupListItem";
import { PopupListValueChangeEvent } from "../../../../data/PopupListValueChangeEvent";
import * as i0 from "@angular/core";
export declare class MultiSelectComponent extends AbstractDropDownListComponent implements OnInit, OnDestroy {
    protected readonly elementRef: ElementRef<HTMLElement>;
    protected readonly popupListService: PopupListService;
    protected readonly popupService: PopupService;
    private readonly cdr;
    private resizeObserver;
    protected selectionMode: SelectionMode;
    popupListValues: any[];
    summaryTagTemplate: TemplateRef<any> | null;
    tagCount: number;
    valuePopupListItem: PopupListItem[];
    filterable: boolean;
    groupTemplate?: TemplateRef<any>;
    itemTemplate?: TemplateRef<any>;
    tagTemplate: TemplateRef<any> | null;
    value: any[];
    valueChange: EventEmitter<any[]>;
    constructor(elementRef: ElementRef<HTMLElement>, popupListService: PopupListService, popupService: PopupService, cdr: ChangeDetectorRef);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    ngOnInit(): void;
    onPopupListValueChange(event: PopupListValueChangeEvent): void;
    onSelectedItemRemove(event: Event, popupListItem: PopupListItem): void;
    onSelectedItemGroupRemove(event: Event): void;
    private containsValue;
    private setEventListeners;
    get summaryTagText(): string;
    get visibleTagCount(): number;
    static ɵfac: i0.ɵɵFactoryDeclaration<MultiSelectComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MultiSelectComponent, "mona-multi-select", never, { "filterable": { "alias": "filterable"; "required": false; }; "value": { "alias": "value"; "required": false; }; }, { "valueChange": "valueChange"; }, ["groupTemplate", "itemTemplate", "tagTemplate"], never, false, never>;
}
