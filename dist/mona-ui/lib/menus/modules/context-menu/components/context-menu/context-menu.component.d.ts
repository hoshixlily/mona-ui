import { AfterContentInit, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit, QueryList, Renderer2 } from "@angular/core";
import { FlexibleConnectedPositionStrategyOrigin } from "@angular/cdk/overlay";
import { ContextMenuService } from "../../services/context-menu.service";
import { MenuItem } from "../../models/MenuItem";
import { PopupOffset } from "../../../../../popup/models/PopupOffset";
import { MenuItemComponent } from "../../../shared-menu/components/menu-item/menu-item.component";
import { ContextMenuCloseEvent } from "../../models/ContextMenuCloseEvent";
import { ContextMenuOpenEvent } from "../../models/ContextMenuOpenEvent";
import { ContextMenuNavigationEvent } from "../../models/ContextMenuNavigationEvent";
import * as i0 from "@angular/core";
export declare class ContextMenuComponent implements OnInit, OnDestroy, AfterContentInit {
    private readonly contextMenuService;
    private readonly elementRef;
    private readonly renderer;
    private zone;
    private readonly componentDestroy$;
    private contextMenuInjectorData;
    private contextMenuRef;
    private menuClickNotifier;
    private precise;
    private targetListener;
    private windowEventListenerRefs;
    readonly uid: string;
    close: EventEmitter<ContextMenuCloseEvent>;
    menuItemComponents: QueryList<MenuItemComponent>;
    menuItems: MenuItem[];
    minWidth?: number | string;
    navigate: EventEmitter<ContextMenuNavigationEvent>;
    offset?: PopupOffset;
    open: EventEmitter<ContextMenuOpenEvent>;
    popupClass: string | string[];
    target: FlexibleConnectedPositionStrategyOrigin;
    trigger: string;
    width?: number | string;
    constructor(contextMenuService: ContextMenuService, elementRef: ElementRef, renderer: Renderer2, zone: NgZone);
    closeMenu(): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    ngOnInit(): void;
    openMenu(): void;
    setPrecise(precise: boolean): void;
    private create;
    private onOutsideClick;
    private setEventListeners;
    static ɵfac: i0.ɵɵFactoryDeclaration<ContextMenuComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ContextMenuComponent, "mona-contextmenu", never, { "menuItems": { "alias": "menuItems"; "required": false; }; "minWidth": { "alias": "minWidth"; "required": false; }; "offset": { "alias": "offset"; "required": false; }; "popupClass": { "alias": "popupClass"; "required": false; }; "target": { "alias": "target"; "required": false; }; "trigger": { "alias": "trigger"; "required": false; }; "width": { "alias": "width"; "required": false; }; }, { "close": "close"; "navigate": "navigate"; "open": "open"; }, ["menuItemComponents"], never, false, never>;
}
