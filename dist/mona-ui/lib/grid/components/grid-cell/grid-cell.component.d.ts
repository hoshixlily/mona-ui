import { ChangeDetectorRef, ElementRef, OnDestroy, OnInit } from "@angular/core";
import { Column } from "../../models/Column";
import { Row } from "../../models/Row";
import { FormGroup } from "@angular/forms";
import { FocusMonitor, FocusOrigin } from "@angular/cdk/a11y";
import { GridService } from "../../services/grid.service";
import * as i0 from "@angular/core";
export declare class GridCellComponent implements OnInit, OnDestroy {
    #private;
    private readonly cdr;
    private readonly elementRef;
    private readonly focusMonitor;
    private readonly gridService;
    private focused;
    editForm: FormGroup;
    editing: boolean;
    column: Column;
    row: Row;
    constructor(cdr: ChangeDetectorRef, elementRef: ElementRef<HTMLElement>, focusMonitor: FocusMonitor, gridService: GridService);
    ngOnDestroy(): void;
    ngOnInit(): void;
    initializeForm(): void;
    onDateChange(date: Date | null): void;
    onFocusChange(origin: FocusOrigin): void;
    private notifyCellEdit;
    private focus;
    private focusCellInput;
    private setSubscriptions;
    private updateCellValue;
    private get gridEditable();
    static ɵfac: i0.ɵɵFactoryDeclaration<GridCellComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<GridCellComponent, "mona-grid-cell", never, { "column": { "alias": "column"; "required": false; }; "row": { "alias": "row"; "required": false; }; }, {}, never, never, false, never>;
}
