import { ChangeDetectionStrategy, Component, Input } from "@angular/core";
import { asapScheduler } from "rxjs";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class ProgressBarComponent {
    set value(value) {
        this.updateProgress(value);
    }
    constructor(elementRef, cdr) {
        this.elementRef = elementRef;
        this.cdr = cdr;
        this.progress = 0;
        this.rightClip = -1;
        this.color = "var(--mona-primary)";
        this.disabled = false;
        this.indeterminate = false;
        this.labelPosition = "center";
        this.labelStyles = {};
        this.labelVisible = true;
        this.max = 100;
        this.min = 0;
    }
    ngAfterViewInit() {
        window.setTimeout(() => {
            this.updateProgress(this.progress);
        });
    }
    ngOnInit() { }
    updateProgress(value) {
        const oldProgress = this.progress;
        this.progress = ((value - this.min) / (this.max - this.min)) * 100;
        this.updateProgressStyle(oldProgress, this.progress);
    }
    updateProgressStyle(oldProgress, newProgress) {
        if (oldProgress !== 100 && newProgress === 100) {
            asapScheduler.schedule(() => {
                this.rightClip = 1;
                this.cdr.detectChanges();
            }, 350);
        }
        else {
            this.rightClip = -1;
            this.cdr.detectChanges();
            asapScheduler.schedule(() => {
                this.cdr.detectChanges();
            });
        }
    }
    get label() {
        return this.labelFormat?.(this.progress) ?? `${this.progress}%`;
    }
    get progressColor() {
        return typeof this.color === "function" ? this.color(this.progress) : this.color;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: ProgressBarComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.0", type: ProgressBarComponent, selector: "mona-progress-bar", inputs: { color: "color", disabled: "disabled", indeterminate: "indeterminate", labelFormat: "labelFormat", labelPosition: "labelPosition", labelStyles: "labelStyles", labelVisible: "labelVisible", max: "max", min: "min", value: "value" }, ngImport: i0, template: "<div class=\"mona-progress-bar\" [ngClass]=\"{'mona-disabled': disabled}\">\n    <div class=\"mona-progress-bar-track mona-progress-bar-track-prev\" [ngStyle]=\"{'background-color': progressColor}\"\n         [ngClass]=\"{'mona-progress-left': labelPosition==='start', 'mona-progress-right': labelPosition==='end', 'mona-progress-bar-label-hidden': !labelVisible, 'mona-progress-bar-indeterminate': indeterminate}\">\n        <ng-container *ngIf=\"labelVisible && !indeterminate\">\n            <span class=\"mona-progress-bar-label\" [ngStyle]=\"labelStyles\" *ngIf=\"!labelFormat\">{{progress | number:'1.0-2'}}%</span>\n            <span class=\"mona-progress-bar-label\" [ngStyle]=\"labelStyles\" *ngIf=\"labelFormat\">{{label}}</span>\n        </ng-container>\n    </div>\n    <div class=\"mona-progress-bar-track mona-progress-bar-track-next indeterminate\"\n         [ngClass]=\"{'mona-progress-left': labelPosition==='start', 'mona-progress-right': labelPosition==='end', 'mona-progress-bar-label-hidden': !labelVisible, 'mona-progress-bar-indeterminate': indeterminate}\"\n         [ngStyle]=\"{'clip-path': 'inset(-1px '+rightClip+'px -1px '+progress+'%)'}\">\n        <ng-container *ngIf=\"labelVisible && !indeterminate\">\n            <span class=\"mona-progress-bar-label\" [ngStyle]=\"labelStyles\" *ngIf=\"!labelFormat\">{{progress | number:'1.0-2'}}%</span>\n            <span class=\"mona-progress-bar-label\" [ngStyle]=\"labelStyles\" *ngIf=\"labelFormat\">{{label}}</span>\n        </ng-container>\n    </div>\n</div>\n", styles: ["div.mona-progress-bar{position:relative;display:flex;align-items:center;justify-content:center;width:100%}div.mona-progress-bar-track{font-size:12px;font-weight:400;display:flex;align-items:center;justify-content:center;width:100%;padding:3px 0}div.mona-progress-bar-track-prev{transition:background-color .35s linear}div.mona-progress-bar-track-next{position:absolute;transition:clip-path .35s linear}div.mona-progress-left{justify-content:flex-start}div.mona-progress-right{justify-content:flex-end}span.mona-progress-bar-label{padding:0 4px}div.mona-progress-bar-label-hidden{padding:10px 0}div.mona-progress-bar-indeterminate{background-size:200% 200%;animation:indeterminate 16s linear infinite;animation-direction:reverse;padding:10px 0}@keyframes indeterminate{to{background-position:100% 100%}}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "pipe", type: i1.DecimalPipe, name: "number" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: ProgressBarComponent, decorators: [{
            type: Component,
            args: [{ selector: "mona-progress-bar", changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"mona-progress-bar\" [ngClass]=\"{'mona-disabled': disabled}\">\n    <div class=\"mona-progress-bar-track mona-progress-bar-track-prev\" [ngStyle]=\"{'background-color': progressColor}\"\n         [ngClass]=\"{'mona-progress-left': labelPosition==='start', 'mona-progress-right': labelPosition==='end', 'mona-progress-bar-label-hidden': !labelVisible, 'mona-progress-bar-indeterminate': indeterminate}\">\n        <ng-container *ngIf=\"labelVisible && !indeterminate\">\n            <span class=\"mona-progress-bar-label\" [ngStyle]=\"labelStyles\" *ngIf=\"!labelFormat\">{{progress | number:'1.0-2'}}%</span>\n            <span class=\"mona-progress-bar-label\" [ngStyle]=\"labelStyles\" *ngIf=\"labelFormat\">{{label}}</span>\n        </ng-container>\n    </div>\n    <div class=\"mona-progress-bar-track mona-progress-bar-track-next indeterminate\"\n         [ngClass]=\"{'mona-progress-left': labelPosition==='start', 'mona-progress-right': labelPosition==='end', 'mona-progress-bar-label-hidden': !labelVisible, 'mona-progress-bar-indeterminate': indeterminate}\"\n         [ngStyle]=\"{'clip-path': 'inset(-1px '+rightClip+'px -1px '+progress+'%)'}\">\n        <ng-container *ngIf=\"labelVisible && !indeterminate\">\n            <span class=\"mona-progress-bar-label\" [ngStyle]=\"labelStyles\" *ngIf=\"!labelFormat\">{{progress | number:'1.0-2'}}%</span>\n            <span class=\"mona-progress-bar-label\" [ngStyle]=\"labelStyles\" *ngIf=\"labelFormat\">{{label}}</span>\n        </ng-container>\n    </div>\n</div>\n", styles: ["div.mona-progress-bar{position:relative;display:flex;align-items:center;justify-content:center;width:100%}div.mona-progress-bar-track{font-size:12px;font-weight:400;display:flex;align-items:center;justify-content:center;width:100%;padding:3px 0}div.mona-progress-bar-track-prev{transition:background-color .35s linear}div.mona-progress-bar-track-next{position:absolute;transition:clip-path .35s linear}div.mona-progress-left{justify-content:flex-start}div.mona-progress-right{justify-content:flex-end}span.mona-progress-bar-label{padding:0 4px}div.mona-progress-bar-label-hidden{padding:10px 0}div.mona-progress-bar-indeterminate{background-size:200% 200%;animation:indeterminate 16s linear infinite;animation-direction:reverse;padding:10px 0}@keyframes indeterminate{to{background-position:100% 100%}}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { color: [{
                type: Input
            }], disabled: [{
                type: Input
            }], indeterminate: [{
                type: Input
            }], labelFormat: [{
                type: Input
            }], labelPosition: [{
                type: Input
            }], labelStyles: [{
                type: Input
            }], labelVisible: [{
                type: Input
            }], max: [{
                type: Input
            }], min: [{
                type: Input
            }], value: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,