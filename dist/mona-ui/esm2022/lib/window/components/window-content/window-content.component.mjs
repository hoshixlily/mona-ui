import { ChangeDetectionStrategy, Component, ElementRef, Inject, TemplateRef, ViewChild, ViewContainerRef } from "@angular/core";
import { PopupInjectionToken } from "../../../popup/models/PopupInjectionToken";
import { faClose } from "@fortawesome/free-solid-svg-icons";
import { WindowCloseEvent } from "../../models/WindowCloseEvent";
import { PopupCloseSource } from "../../../popup/models/PopupCloseEvent";
import { PopupService } from "../../../popup/services/popup.service";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../../buttons/modules/button/directives/button.directive";
import * as i3 from "@fortawesome/angular-fontawesome";
import * as i4 from "../../directives/window-resize-handler.directive";
import * as i5 from "../../directives/window-drag-handler.directive";
export class WindowContentComponent {
    constructor(injector, windowData, elementRef) {
        this.injector = injector;
        this.windowData = windowData;
        this.elementRef = elementRef;
        this.closeIcon = faClose;
        this.contentType = "template";
        if (windowData.content instanceof TemplateRef) {
            this.contentType = "template";
        }
        else {
            this.contentType = "component";
            this.componentRef = PopupService.popupAnchorDirective.viewContainerRef.createComponent(windowData.content, {
                injector: this.injector
            });
        }
    }
    ngAfterViewInit() {
        if (this.contentType === "component" && this.componentAnchor && this.componentRef) {
            const index = PopupService.popupAnchorDirective.viewContainerRef.indexOf(this.componentRef.hostView);
            if (index !== -1) {
                PopupService.popupAnchorDirective.viewContainerRef.detach(index);
            }
            this.componentAnchor.insert(this.componentRef.hostView, 0);
            this.componentRef.changeDetectorRef.detectChanges();
        }
        this.focusElement();
    }
    ngOnInit() { }
    onCloseClick(event) {
        const closeEvent = new WindowCloseEvent({ event, via: PopupCloseSource.CloseButton });
        if (this.windowData.preventClose && this.windowData.preventClose(closeEvent)) {
            return;
        }
        this.windowData.windowReference.close();
    }
    focusElement() {
        const element = this.windowData.focusedElement;
        if (element === undefined) {
            return;
        }
        const windowElement = this.elementRef.nativeElement;
        if (element instanceof ElementRef) {
            element.nativeElement.focus();
        }
        else if (element instanceof HTMLElement) {
            element.focus();
        }
        else {
            const elements = windowElement.querySelectorAll(element);
            if (elements.length > 0) {
                elements[0].focus();
            }
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: WindowContentComponent, deps: [{ token: i0.Injector }, { token: PopupInjectionToken }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.0", type: WindowContentComponent, selector: "mona-window-content", viewQueries: [{ propertyName: "componentAnchor", first: true, predicate: ["componentAnchor"], descendants: true, read: ViewContainerRef }], ngImport: i0, template: "<div class=\"mona-window-content-container\">\n    <div class=\"mona-window-title-bar\" monaWindowDragHandler [draggable]=\"windowData.draggable\" [windowRef]=\"windowData.windowReference\">\n        <div class=\"mona-window-title-container\">\n            <span class=\"mona-window-title\" *ngIf=\"!windowData.titleTemplate\">{{windowData.title ?? ''}}</span>\n            <ng-container [ngTemplateOutlet]=\"windowData.titleTemplate\" *ngIf=\"windowData.titleTemplate\"></ng-container>\n        </div>\n        <div class=\"mona-window-title-bar-actions\">\n            <button monaButton class=\"mona-window-title-bar-action\" [flat]=\"true\" (click)=\"onCloseClick($event)\">\n                <fa-icon [icon]=\"closeIcon\"></fa-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"mona-window-content\">\n        <ng-container [ngTemplateOutlet]=\"$any(windowData.content)\" *ngIf=\"contentType==='template'\"></ng-container>\n        <ng-container #componentAnchor *ngIf=\"contentType==='component'\"></ng-container>\n    </div>\n\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"north\" class=\"mona-window-resizer mona-window-resizer-north\"\n         *ngIf=\"windowData.resizable\"></div>\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"south\" class=\"mona-window-resizer mona-window-resizer-south\"\n         *ngIf=\"windowData.resizable\"></div>\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"east\" class=\"mona-window-resizer mona-window-resizer-east\"\n         *ngIf=\"windowData.resizable\"></div>\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"west\" class=\"mona-window-resizer mona-window-resizer-west\"\n         *ngIf=\"windowData.resizable\"></div>\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"northeast\"\n         class=\"mona-window-resizer mona-window-resizer-northeast\" *ngIf=\"windowData.resizable\"></div>\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"northwest\"\n         class=\"mona-window-resizer mona-window-resizer-northwest\" *ngIf=\"windowData.resizable\"></div>\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"southeast\"\n         class=\"mona-window-resizer mona-window-resizer-southeast\" *ngIf=\"windowData.resizable\"></div>\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"southwest\"\n         class=\"mona-window-resizer mona-window-resizer-southwest\" *ngIf=\"windowData.resizable\"></div>\n\n</div>\n", styles: [":host{width:100%;height:100%}div.mona-window-content-container{display:flex;flex-direction:column;overflow:hidden;position:relative;width:100%;height:100%}div.mona-window-title-bar{display:flex;align-items:center;justify-content:flex-start;height:var(--mona-input-height);border-bottom:1px solid var(--mona-border-color);background-color:var(--mona-background-dark)}div.mona-window-title-container{flex:1;padding:0 10px;height:100%;display:flex;align-items:center;cursor:default;-webkit-user-select:none;user-select:none}span.mona-window-title{font-weight:700;color:var(--mona-text)}div.mona-window-title-bar-actions{display:flex;align-items:center;justify-content:space-evenly}.mona-window-content{flex:1;overflow:auto;padding:10px}.mona-window-resizer{position:absolute;display:flex;background-color:transparent}.mona-window-resizer-north{top:0;left:0;right:0;height:10px;cursor:ns-resize}.mona-window-resizer-south{bottom:0;left:0;right:0;height:10px;cursor:ns-resize}.mona-window-resizer-east{top:0;right:0;bottom:0;width:10px;cursor:ew-resize}.mona-window-resizer-west{top:0;left:0;bottom:0;width:10px;cursor:ew-resize}.mona-window-resizer-northeast{top:0;right:0;width:10px;height:10px;cursor:nesw-resize}.mona-window-resizer-northwest{top:0;left:0;width:10px;height:10px;cursor:nwse-resize}.mona-window-resizer-southeast{bottom:0;right:0;width:10px;height:10px;cursor:nwse-resize}.mona-window-resizer-southwest{bottom:0;left:0;width:10px;height:10px;cursor:nesw-resize}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i2.ButtonDirective, selector: "[monaButton]", inputs: ["disabled", "flat", "primary", "selected", "toggleable"], outputs: ["selectedChange"] }, { kind: "component", type: i3.FaIconComponent, selector: "fa-icon", inputs: ["icon", "title", "spin", "pulse", "mask", "styles", "flip", "size", "pull", "border", "inverse", "symbol", "rotate", "fixedWidth", "classes", "transform", "a11yRole"] }, { kind: "directive", type: i4.WindowResizeHandlerDirective, selector: "div[monaWindowResizeHandler]", inputs: ["direction", "maxHeight", "maxWidth", "minHeight", "minWidth", "windowRef"] }, { kind: "directive", type: i5.WindowDragHandlerDirective, selector: "div[monaWindowDragHandler]", inputs: ["draggable", "windowRef"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: WindowContentComponent, decorators: [{
            type: Component,
            args: [{ selector: "mona-window-content", changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"mona-window-content-container\">\n    <div class=\"mona-window-title-bar\" monaWindowDragHandler [draggable]=\"windowData.draggable\" [windowRef]=\"windowData.windowReference\">\n        <div class=\"mona-window-title-container\">\n            <span class=\"mona-window-title\" *ngIf=\"!windowData.titleTemplate\">{{windowData.title ?? ''}}</span>\n            <ng-container [ngTemplateOutlet]=\"windowData.titleTemplate\" *ngIf=\"windowData.titleTemplate\"></ng-container>\n        </div>\n        <div class=\"mona-window-title-bar-actions\">\n            <button monaButton class=\"mona-window-title-bar-action\" [flat]=\"true\" (click)=\"onCloseClick($event)\">\n                <fa-icon [icon]=\"closeIcon\"></fa-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"mona-window-content\">\n        <ng-container [ngTemplateOutlet]=\"$any(windowData.content)\" *ngIf=\"contentType==='template'\"></ng-container>\n        <ng-container #componentAnchor *ngIf=\"contentType==='component'\"></ng-container>\n    </div>\n\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"north\" class=\"mona-window-resizer mona-window-resizer-north\"\n         *ngIf=\"windowData.resizable\"></div>\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"south\" class=\"mona-window-resizer mona-window-resizer-south\"\n         *ngIf=\"windowData.resizable\"></div>\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"east\" class=\"mona-window-resizer mona-window-resizer-east\"\n         *ngIf=\"windowData.resizable\"></div>\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"west\" class=\"mona-window-resizer mona-window-resizer-west\"\n         *ngIf=\"windowData.resizable\"></div>\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"northeast\"\n         class=\"mona-window-resizer mona-window-resizer-northeast\" *ngIf=\"windowData.resizable\"></div>\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"northwest\"\n         class=\"mona-window-resizer mona-window-resizer-northwest\" *ngIf=\"windowData.resizable\"></div>\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"southeast\"\n         class=\"mona-window-resizer mona-window-resizer-southeast\" *ngIf=\"windowData.resizable\"></div>\n    <div monaWindowResizeHandler [minWidth]=\"windowData.minWidth\" [minHeight]=\"windowData.minHeight\"\n         [maxWidth]=\"windowData.maxWidth\" [maxHeight]=\"windowData.maxHeight\"\n         [windowRef]=\"windowData.windowReference\" direction=\"southwest\"\n         class=\"mona-window-resizer mona-window-resizer-southwest\" *ngIf=\"windowData.resizable\"></div>\n\n</div>\n", styles: [":host{width:100%;height:100%}div.mona-window-content-container{display:flex;flex-direction:column;overflow:hidden;position:relative;width:100%;height:100%}div.mona-window-title-bar{display:flex;align-items:center;justify-content:flex-start;height:var(--mona-input-height);border-bottom:1px solid var(--mona-border-color);background-color:var(--mona-background-dark)}div.mona-window-title-container{flex:1;padding:0 10px;height:100%;display:flex;align-items:center;cursor:default;-webkit-user-select:none;user-select:none}span.mona-window-title{font-weight:700;color:var(--mona-text)}div.mona-window-title-bar-actions{display:flex;align-items:center;justify-content:space-evenly}.mona-window-content{flex:1;overflow:auto;padding:10px}.mona-window-resizer{position:absolute;display:flex;background-color:transparent}.mona-window-resizer-north{top:0;left:0;right:0;height:10px;cursor:ns-resize}.mona-window-resizer-south{bottom:0;left:0;right:0;height:10px;cursor:ns-resize}.mona-window-resizer-east{top:0;right:0;bottom:0;width:10px;cursor:ew-resize}.mona-window-resizer-west{top:0;left:0;bottom:0;width:10px;cursor:ew-resize}.mona-window-resizer-northeast{top:0;right:0;width:10px;height:10px;cursor:nesw-resize}.mona-window-resizer-northwest{top:0;left:0;width:10px;height:10px;cursor:nwse-resize}.mona-window-resizer-southeast{bottom:0;right:0;width:10px;height:10px;cursor:nwse-resize}.mona-window-resizer-southwest{bottom:0;left:0;width:10px;height:10px;cursor:nesw-resize}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [PopupInjectionToken]
                }] }, { type: i0.ElementRef }]; }, propDecorators: { componentAnchor: [{
                type: ViewChild,
                args: ["componentAnchor", { read: ViewContainerRef }]
            }] } });
//# sourceMappingURL=data:application/json;base64,