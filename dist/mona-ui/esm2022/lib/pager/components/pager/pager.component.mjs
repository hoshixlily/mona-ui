import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from "@angular/core";
import { faAngleDoubleLeft, faAngleDoubleRight, faAngleLeft, faAngleRight, faEllipsis } from "@fortawesome/free-solid-svg-icons";
import { PageSizeChangeEvent } from "../../models/PageSizeChangeEvent";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../../buttons/modules/button/directives/button.directive";
import * as i3 from "@fortawesome/angular-fontawesome";
import * as i4 from "../../../inputs/modules/numeric-text-box/components/numeric-text-box/numeric-text-box.component";
import * as i5 from "../../../dropdowns/modules/drop-down-list/components/drop-down-list/drop-down-list.component";
import * as i6 from "../../../pipes/slice.pipe";
export class PagerComponent {
    set pageSizeValues(values) {
        if (values === false || (Array.isArray(values) && values.length === 0)) {
            this.pageSizeValueList = [];
        }
        else if (Array.isArray(values)) {
            this.pageSizeValueList = values;
        }
        else {
            this.pageSizeValueList = [10, 20, 50, 100];
        }
    }
    constructor() {
        this.previousPageSize = 10;
        this.ellipsisIcon = faEllipsis;
        this.firstPageIcon = faAngleDoubleLeft;
        this.lastPageIcon = faAngleDoubleRight;
        this.nextIcon = faAngleRight;
        this.previousIcon = faAngleLeft;
        this.inputValue = null;
        this.pageCount = 10;
        this.page = 1;
        this.pageSizeValueList = [];
        this.pages = [];
        this.firstLast = true;
        this.pageChange = new EventEmitter();
        this.pageInput = false;
        this.pageSize = 10;
        this.pageSizeChange = new EventEmitter();
        this.previousNext = true;
        this.skip = 0;
        this.total = 0;
        this.type = "numeric";
        this.visiblePages = 5;
    }
    ngOnChanges(changes) {
        if (changes["pageSize"] || changes["total"] || changes["visiblePages"] || changes["skip"]) {
            const pageSize = changes["pageSize"] ? changes["pageSize"].currentValue : this.pageSize;
            const total = changes["total"] ? changes["total"].currentValue : this.total;
            const visiblePages = changes["visiblePages"] ? changes["visiblePages"].currentValue : this.visiblePages;
            this.pageCount = Math.ceil(total / pageSize);
            if (changes["skip"] && changes["skip"].currentValue !== changes["skip"].previousValue) {
                const skip = changes["skip"].currentValue;
                this.page = Math.floor(skip / pageSize) + 1 ?? this.page;
                this.inputValue = this.page;
            }
            this.pageCount = Math.ceil(total / pageSize);
            this.preparePages(this.page, visiblePages, this.pageCount);
        }
    }
    ngOnInit() { }
    onJumpNextClick() {
        const page = Math.min(this.page + this.visiblePages, this.pageCount);
        this.setPage(page);
    }
    onJumpPreviousClick() {
        const page = Math.max(this.page - this.visiblePages, 1);
        this.setPage(page);
    }
    onNextPageClick() {
        const page = Math.min(this.page + 1, this.pageCount);
        this.setPage(page);
    }
    onPageClick(page) {
        if (page === this.page) {
            return;
        }
        this.setPage(page);
    }
    onPageInputBlur() {
        if (this.inputValue === null || this.inputValue === this.page) {
            this.inputValue = this.page;
            return;
        }
        if (this.inputValue < 1) {
            this.inputValue = 1;
        }
        else if (this.inputValue > this.pageCount) {
            this.inputValue = this.pageCount;
        }
        this.setPage(this.inputValue);
    }
    onPageSizeValueChange(value) {
        if (value === this.pageSize) {
            return;
        }
        const event = new PageSizeChangeEvent(value, this.pageSize);
        if (this.pageSizeDropdownList) {
            this.pageSizeDropdownList.setValue(this.previousPageSize);
        }
        this.pageSizeChange.emit(event);
        if (event.isDefaultPrevented()) {
            this.pageSize = this.previousPageSize;
            if (this.pageSizeDropdownList) {
                this.pageSizeDropdownList.setValue(this.previousPageSize);
            }
            return;
        }
        this.previousPageSize = value;
        if (this.pageSizeDropdownList) {
            this.pageSizeDropdownList.setValue(value);
        }
        this.pageCount = Math.ceil(this.total / this.pageSize);
        this.setPage(1);
    }
    onPreviousPageClick() {
        const page = Math.max(this.page - 1, 1);
        this.setPage(page);
    }
    preparePages(currentPage, visiblePages, maxPages) {
        const half = Math.floor(visiblePages / 2);
        let first = 1;
        let index = 0;
        this.pages = [];
        if (maxPages <= 10) {
            for (index = 1; index <= maxPages; index++) {
                this.pages.push({ page: index, text: index.toString() });
            }
        }
        else if (currentPage < visiblePages) {
            this.pages.push({ page: first, text: first.toString() });
            for (index = 2; index < (maxPages < visiblePages ? maxPages : visiblePages) + 1; index++) {
                this.pages.push({ page: index, text: index.toString() });
            }
            this.pages.push({ page: maxPages, text: maxPages.toString() });
        }
        else if (currentPage >= visiblePages && currentPage <= maxPages - visiblePages) {
            this.pages.push({ page: first, text: first.toString() });
            for (index = currentPage - half; index < currentPage + visiblePages - half; index++) {
                this.pages.push({ page: index, text: index.toString() });
            }
            this.pages.push({ page: maxPages, text: maxPages.toString() });
        }
        else if (currentPage >= maxPages - visiblePages) {
            this.pages.push({ page: first, text: first.toString() });
            index = maxPages - visiblePages < currentPage ? maxPages - visiblePages : currentPage;
            for (; index <= maxPages; index++) {
                this.pages.push({ page: index, text: index.toString() });
            }
        }
    }
    setPage(page) {
        const skip = (page - 1) * this.pageSize;
        this.pageChange.emit({ page, skip, take: this.pageSize });
    }
    get currentPageDataCountEnd() {
        return Math.min(this.page * this.pageSize, this.total);
    }
    get currentPageDataCountStart() {
        return (this.page - 1) * this.pageSize + 1;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: PagerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.0", type: PagerComponent, selector: "mona-pager", inputs: { firstLast: "firstLast", pageInput: "pageInput", pageSize: "pageSize", previousNext: "previousNext", pageSizeValues: "pageSizeValues", skip: "skip", total: "total", type: "type", visiblePages: "visiblePages" }, outputs: { pageChange: "pageChange", pageSizeChange: "pageSizeChange" }, viewQueries: [{ propertyName: "pageSizeDropdownList", first: true, predicate: ["pageSizeDropdownList"], descendants: true }], usesOnChanges: true, ngImport: i0, template: "<div class=\"mona-pager\">\n    <ng-container *ngIf=\"type==='numeric'\">\n        <ol class=\"mona-pager-list\">\n            <li *ngIf=\"firstLast\">\n                <button monaButton [flat]=\"true\" (click)=\"onPageClick(1)\" [disabled]=\"page===1\">\n                    <fa-icon [icon]=\"firstPageIcon\"></fa-icon>\n                </button>\n            </li>\n            <li *ngIf=\"previousNext\">\n                <button monaButton [flat]=\"true\" [disabled]=\"page<=1\" (click)=\"onPreviousPageClick()\">\n                    <fa-icon [icon]=\"previousIcon\"></fa-icon>\n                </button>\n            </li>\n            <li *ngIf=\"pages.length !== 0\" [ngClass]=\"{'mona-pager-active': page===1}\">\n                <button monaButton [flat]=\"true\" (click)=\"onPageClick(1)\">1</button>\n            </li>\n            <li *ngIf=\"pages.length > visiblePages && pages[1].page - 1 > 1\">\n                <button monaButton [flat]=\"true\" (click)=\"onJumpPreviousClick()\">\n                    <fa-icon [icon]=\"ellipsisIcon\"></fa-icon>\n                </button>\n            </li>\n            <ng-container *ngFor=\"let pageItem of pages|monaSlice:1:pages.length-1; let px = index;\">\n                <li [attr.data-page]=\"pageItem.page\" [ngClass]=\"{'mona-pager-active': page===pageItem.page}\">\n                    <button monaButton [flat]=\"true\" (click)=\"onPageClick(pageItem.page)\">{{pageItem.text}}</button>\n                </li>\n            </ng-container>\n            <li *ngIf=\"pages.length > visiblePages && pages[pages.length-1].page - pages[pages.length-2].page > 1\">\n                <button monaButton [flat]=\"true\" (click)=\"onJumpNextClick()\">\n                    <fa-icon [icon]=\"ellipsisIcon\"></fa-icon>\n                </button>\n            </li>\n            <li *ngIf=\"pages.length > 1\" [ngClass]=\"{'mona-pager-active': page===pageCount}\">\n                <button monaButton [flat]=\"true\" (click)=\"onPageClick(pageCount)\">{{pageCount}}</button>\n            </li>\n            <li *ngIf=\"previousNext\">\n                <button monaButton [flat]=\"true\" [disabled]=\"page < 1 || page === pageCount\" (click)=\"onNextPageClick()\">\n                    <fa-icon [icon]=\"nextIcon\"></fa-icon>\n                </button>\n            </li>\n            <li *ngIf=\"firstLast\">\n                <button monaButton [flat]=\"true\" (click)=\"onPageClick(pageCount)\" [disabled]=\"page===pageCount\">\n                    <fa-icon [icon]=\"lastPageIcon\"></fa-icon>\n                </button>\n            </li>\n            <li>\n                <mona-numeric-text-box [spinners]=\"false\" [min]=\"1\" [max]=\"pageCount\" [(value)]=\"inputValue\"\n                                       (inputBlur)=\"onPageInputBlur()\" *ngIf=\"pageInput\"></mona-numeric-text-box>\n            </li>\n            <li *ngIf=\"pageSizeValueList.length !== 0\">\n                <mona-drop-down-list [data]=\"pageSizeValueList\" [value]=\"pageSize\"\n                                     (valueChange)=\"onPageSizeValueChange($event)\" #pageSizeDropdownList></mona-drop-down-list>\n                <span>items per page</span>\n            </li>\n        </ol>\n        <div class=\"mona-pager-info\">\n            <span>{{currentPageDataCountStart}} - {{currentPageDataCountEnd}} of {{total}} items</span>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"type==='input'\">\n        <div class=\"mona-pager-input\">\n            <ol class=\"mona-pager-list\">\n                <li *ngIf=\"firstLast\">\n                    <button monaButton [flat]=\"true\" (click)=\"onPageClick(1)\" [disabled]=\"page===1\">\n                        <fa-icon [icon]=\"firstPageIcon\"></fa-icon>\n                    </button>\n                </li>\n                <li *ngIf=\"previousNext\">\n                    <button monaButton [flat]=\"true\" [disabled]=\"page<=1\" (click)=\"onPreviousPageClick()\">\n                        <fa-icon [icon]=\"previousIcon\"></fa-icon>\n                    </button>\n                </li>\n               <li>\n                   <span class=\"mona-pager-input-text\">Page</span>\n                   <mona-numeric-text-box [spinners]=\"false\" [min]=\"1\" [max]=\"pageCount\" [(value)]=\"inputValue\"\n                                          (inputBlur)=\"onPageInputBlur()\"></mona-numeric-text-box>\n                   <span class=\"mona-pager-input-text\">of</span>\n                   <span class=\"mona-pager-input-text\">{{pageCount}}</span>\n               </li>\n                <li *ngIf=\"previousNext\">\n                    <button monaButton [flat]=\"true\" [disabled]=\"page < 1 || page === pageCount\" (click)=\"onNextPageClick()\">\n                        <fa-icon [icon]=\"nextIcon\"></fa-icon>\n                    </button>\n                </li>\n                <li *ngIf=\"firstLast\">\n                    <button monaButton [flat]=\"true\" (click)=\"onPageClick(pageCount)\" [disabled]=\"page===pageCount\">\n                        <fa-icon [icon]=\"lastPageIcon\"></fa-icon>\n                    </button>\n                </li>\n            </ol>\n        </div>\n        <div class=\"mona-pager-info\">\n            <span>{{(page-1)*pageSize+1}} - {{page*pageSize > total ? total : page*pageSize}} of {{total}} items</span>\n        </div>\n    </ng-container>\n</div>\n", styles: ["div.mona-pager{display:flex;padding:5px 10px}ol.mona-pager-list{display:flex}ol.mona-pager-list li{list-style:none;display:flex;align-items:center;justify-content:center}mona-numeric-text-box{margin-left:20px;width:50px}mona-drop-down-list{margin:0 5px}div.mona-pager-input{display:flex;align-items:center}div.mona-pager-input mona-numeric-text-box{width:50px;margin:0 5px}div.mona-pager-input span{margin:0 5px}div.mona-pager-info{display:flex;align-items:center;justify-content:flex-end;flex:1 1 0;padding-left:10px}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.ButtonDirective, selector: "[monaButton]", inputs: ["disabled", "flat", "primary", "selected", "toggleable"], outputs: ["selectedChange"] }, { kind: "component", type: i3.FaIconComponent, selector: "fa-icon", inputs: ["icon", "title", "spin", "pulse", "mask", "styles", "flip", "size", "pull", "border", "inverse", "symbol", "rotate", "fixedWidth", "classes", "transform", "a11yRole"] }, { kind: "component", type: i4.NumericTextBoxComponent, selector: "mona-numeric-text-box", inputs: ["decimals", "disabled", "formatter", "max", "min", "readonly", "spinners", "step", "value"], outputs: ["inputBlur", "inputFocus", "valueChange"] }, { kind: "component", type: i5.DropDownListComponent, selector: "mona-drop-down-list", inputs: ["filterable", "value"], outputs: ["valueChange"] }, { kind: "pipe", type: i6.SlicePipe, name: "monaSlice" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: PagerComponent, decorators: [{
            type: Component,
            args: [{ selector: "mona-pager", changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"mona-pager\">\n    <ng-container *ngIf=\"type==='numeric'\">\n        <ol class=\"mona-pager-list\">\n            <li *ngIf=\"firstLast\">\n                <button monaButton [flat]=\"true\" (click)=\"onPageClick(1)\" [disabled]=\"page===1\">\n                    <fa-icon [icon]=\"firstPageIcon\"></fa-icon>\n                </button>\n            </li>\n            <li *ngIf=\"previousNext\">\n                <button monaButton [flat]=\"true\" [disabled]=\"page<=1\" (click)=\"onPreviousPageClick()\">\n                    <fa-icon [icon]=\"previousIcon\"></fa-icon>\n                </button>\n            </li>\n            <li *ngIf=\"pages.length !== 0\" [ngClass]=\"{'mona-pager-active': page===1}\">\n                <button monaButton [flat]=\"true\" (click)=\"onPageClick(1)\">1</button>\n            </li>\n            <li *ngIf=\"pages.length > visiblePages && pages[1].page - 1 > 1\">\n                <button monaButton [flat]=\"true\" (click)=\"onJumpPreviousClick()\">\n                    <fa-icon [icon]=\"ellipsisIcon\"></fa-icon>\n                </button>\n            </li>\n            <ng-container *ngFor=\"let pageItem of pages|monaSlice:1:pages.length-1; let px = index;\">\n                <li [attr.data-page]=\"pageItem.page\" [ngClass]=\"{'mona-pager-active': page===pageItem.page}\">\n                    <button monaButton [flat]=\"true\" (click)=\"onPageClick(pageItem.page)\">{{pageItem.text}}</button>\n                </li>\n            </ng-container>\n            <li *ngIf=\"pages.length > visiblePages && pages[pages.length-1].page - pages[pages.length-2].page > 1\">\n                <button monaButton [flat]=\"true\" (click)=\"onJumpNextClick()\">\n                    <fa-icon [icon]=\"ellipsisIcon\"></fa-icon>\n                </button>\n            </li>\n            <li *ngIf=\"pages.length > 1\" [ngClass]=\"{'mona-pager-active': page===pageCount}\">\n                <button monaButton [flat]=\"true\" (click)=\"onPageClick(pageCount)\">{{pageCount}}</button>\n            </li>\n            <li *ngIf=\"previousNext\">\n                <button monaButton [flat]=\"true\" [disabled]=\"page < 1 || page === pageCount\" (click)=\"onNextPageClick()\">\n                    <fa-icon [icon]=\"nextIcon\"></fa-icon>\n                </button>\n            </li>\n            <li *ngIf=\"firstLast\">\n                <button monaButton [flat]=\"true\" (click)=\"onPageClick(pageCount)\" [disabled]=\"page===pageCount\">\n                    <fa-icon [icon]=\"lastPageIcon\"></fa-icon>\n                </button>\n            </li>\n            <li>\n                <mona-numeric-text-box [spinners]=\"false\" [min]=\"1\" [max]=\"pageCount\" [(value)]=\"inputValue\"\n                                       (inputBlur)=\"onPageInputBlur()\" *ngIf=\"pageInput\"></mona-numeric-text-box>\n            </li>\n            <li *ngIf=\"pageSizeValueList.length !== 0\">\n                <mona-drop-down-list [data]=\"pageSizeValueList\" [value]=\"pageSize\"\n                                     (valueChange)=\"onPageSizeValueChange($event)\" #pageSizeDropdownList></mona-drop-down-list>\n                <span>items per page</span>\n            </li>\n        </ol>\n        <div class=\"mona-pager-info\">\n            <span>{{currentPageDataCountStart}} - {{currentPageDataCountEnd}} of {{total}} items</span>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"type==='input'\">\n        <div class=\"mona-pager-input\">\n            <ol class=\"mona-pager-list\">\n                <li *ngIf=\"firstLast\">\n                    <button monaButton [flat]=\"true\" (click)=\"onPageClick(1)\" [disabled]=\"page===1\">\n                        <fa-icon [icon]=\"firstPageIcon\"></fa-icon>\n                    </button>\n                </li>\n                <li *ngIf=\"previousNext\">\n                    <button monaButton [flat]=\"true\" [disabled]=\"page<=1\" (click)=\"onPreviousPageClick()\">\n                        <fa-icon [icon]=\"previousIcon\"></fa-icon>\n                    </button>\n                </li>\n               <li>\n                   <span class=\"mona-pager-input-text\">Page</span>\n                   <mona-numeric-text-box [spinners]=\"false\" [min]=\"1\" [max]=\"pageCount\" [(value)]=\"inputValue\"\n                                          (inputBlur)=\"onPageInputBlur()\"></mona-numeric-text-box>\n                   <span class=\"mona-pager-input-text\">of</span>\n                   <span class=\"mona-pager-input-text\">{{pageCount}}</span>\n               </li>\n                <li *ngIf=\"previousNext\">\n                    <button monaButton [flat]=\"true\" [disabled]=\"page < 1 || page === pageCount\" (click)=\"onNextPageClick()\">\n                        <fa-icon [icon]=\"nextIcon\"></fa-icon>\n                    </button>\n                </li>\n                <li *ngIf=\"firstLast\">\n                    <button monaButton [flat]=\"true\" (click)=\"onPageClick(pageCount)\" [disabled]=\"page===pageCount\">\n                        <fa-icon [icon]=\"lastPageIcon\"></fa-icon>\n                    </button>\n                </li>\n            </ol>\n        </div>\n        <div class=\"mona-pager-info\">\n            <span>{{(page-1)*pageSize+1}} - {{page*pageSize > total ? total : page*pageSize}} of {{total}} items</span>\n        </div>\n    </ng-container>\n</div>\n", styles: ["div.mona-pager{display:flex;padding:5px 10px}ol.mona-pager-list{display:flex}ol.mona-pager-list li{list-style:none;display:flex;align-items:center;justify-content:center}mona-numeric-text-box{margin-left:20px;width:50px}mona-drop-down-list{margin:0 5px}div.mona-pager-input{display:flex;align-items:center}div.mona-pager-input mona-numeric-text-box{width:50px;margin:0 5px}div.mona-pager-input span{margin:0 5px}div.mona-pager-info{display:flex;align-items:center;justify-content:flex-end;flex:1 1 0;padding-left:10px}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { firstLast: [{
                type: Input
            }], pageChange: [{
                type: Output
            }], pageInput: [{
                type: Input
            }], pageSize: [{
                type: Input
            }], pageSizeChange: [{
                type: Output
            }], pageSizeDropdownList: [{
                type: ViewChild,
                args: ["pageSizeDropdownList"]
            }], previousNext: [{
                type: Input
            }], pageSizeValues: [{
                type: Input
            }], skip: [{
                type: Input
            }], total: [{
                type: Input
            }], type: [{
                type: Input
            }], visiblePages: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,