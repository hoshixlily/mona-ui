import { ChangeDetectionStrategy, Component, forwardRef, Input, ViewChild } from "@angular/core";
import { faClock } from "@fortawesome/free-solid-svg-icons";
import { AbstractDatePickerComponent } from "../../../../components/abstract-date-picker/abstract-date-picker.component";
import { NG_VALUE_ACCESSOR } from "@angular/forms";
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/a11y";
import * as i2 from "../../../../../popup/services/popup.service";
import * as i3 from "@angular/common";
import * as i4 from "../../../../../inputs/modules/text-box/components/text-box/text-box.component";
import * as i5 from "../../../../../inputs/modules/text-box/directives/text-box-suffix-template.directive";
import * as i6 from "@fortawesome/angular-fontawesome";
import * as i7 from "../../../../../buttons/modules/button/directives/button.directive";
import * as i8 from "@angular/forms";
import * as i9 from "../../../calendar/components/calendar/calendar.component";
import * as i10 from "../../../time-selector/components/time-selector/time-selector.component";
export class DateTimePickerComponent extends AbstractDatePickerComponent {
    constructor(cdr, elementRef, focusMonitor, popupService) {
        super(cdr, elementRef, focusMonitor, popupService);
        this.cdr = cdr;
        this.elementRef = elementRef;
        this.focusMonitor = focusMonitor;
        this.popupService = popupService;
        this.timeIcon = faClock;
        this.format = "dd/MM/yyyy HH:mm";
        this.hourFormat = "24";
        this.showSeconds = false;
    }
    onTimeInputButtonClick() {
        if (!this.timePopupTemplateRef || this.readonly) {
            return;
        }
        this.popupRef = this.popupService.create({
            anchor: this.popupAnchor,
            content: this.timePopupTemplateRef,
            width: this.elementRef.nativeElement.clientWidth,
            popupClass: "mona-time-picker-popup",
            hasBackdrop: false,
            withPush: false,
            closeOnOutsideClick: true
        });
    }
    onTimeSelectorValueChange(date) {
        this.setCurrentDate(date);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: DateTimePickerComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: i2.PopupService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.0", type: DateTimePickerComponent, selector: "mona-date-time-picker", inputs: { format: "format", hourFormat: "hourFormat", showSeconds: "showSeconds" }, providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => DateTimePickerComponent),
                multi: true
            }
        ], viewQueries: [{ propertyName: "timePopupTemplateRef", first: true, predicate: ["timePopupTemplate"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<div class=\"mona-date-time-picker\" [ngClass]=\"{'mona-disabled': disabled}\" #popupAnchor>\n    <mona-text-box [disabled]=\"disabled\" [readonly]=\"readonly\" [ngModel]=\"currentDateString\" (ngModelChange)=\"onDateStringEdit($event)\" (inputBlur)=\"onDateInputBlur()\">\n        <ng-template monaTextBoxSuffixTemplate>\n            <button monaButton [flat]=\"true\" (click)=\"onDateInputButtonClick()\" [disabled]=\"disabled\" [tabIndex]=\"-1\">\n                <fa-icon [icon]=\"dateIcon\"></fa-icon>\n            </button>\n        </ng-template>\n        <ng-template monaTextBoxSuffixTemplate>\n            <button monaButton [flat]=\"true\" (click)=\"onTimeInputButtonClick()\" [disabled]=\"disabled\" [tabIndex]=\"-1\">\n                <fa-icon [icon]=\"timeIcon\"></fa-icon>\n            </button>\n        </ng-template>\n    </mona-text-box>\n</div>\n\n<ng-template #datePopupTemplate>\n    <mona-calendar [disabledDates]=\"disabledDates\" [min]=\"min\" [max]=\"max\" [value]=\"value\" (valueChange)=\"onCalendarValueChange($event)\"></mona-calendar>\n</ng-template>\n\n<ng-template #timePopupTemplate>\n    <mona-time-selector [value]=\"value\" (valueChange)=\"onTimeSelectorValueChange($event)\"\n                        [hourFormat]=\"hourFormat\" [showSeconds]=\"showSeconds\"></mona-time-selector>\n</ng-template>\n", styles: ["div.mona-date-time-picker-times{display:flex;flex-direction:column;width:100%;align-items:center;justify-content:center;-webkit-user-select:none;user-select:none}div.mona-date-time-picker-times>div:first-child{display:flex}div.mona-date-time-picker-times>div:first-child>div{display:flex;flex-direction:column;align-items:center;justify-content:center;padding:0 4px}div.mona-date-time-picker-times>div:first-child>div>span{font-size:14px;font-weight:700;display:flex;align-items:center;justify-content:center}div.mona-date-time-picker-times>div:first-child>div mona-numeric-text-box{width:64px}div.mona-date-time-picker-times>div:last-child{padding:16px 0 0}div.mona-date-time-picker-times>div:last-child>button:not(:last-child){margin-right:4px}div.mona-date-time-picker-times fa-icon{font-size:18px}\n"], dependencies: [{ kind: "directive", type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "component", type: i4.TextBoxComponent, selector: "mona-text-box", inputs: ["disabled", "readonly"], outputs: ["inputBlur", "inputFocus"] }, { kind: "directive", type: i5.TextBoxSuffixTemplateDirective, selector: "ng-template[monaTextBoxSuffixTemplate]" }, { kind: "component", type: i6.FaIconComponent, selector: "fa-icon", inputs: ["icon", "title", "spin", "pulse", "mask", "styles", "flip", "size", "pull", "border", "inverse", "symbol", "rotate", "fixedWidth", "classes", "transform", "a11yRole"] }, { kind: "directive", type: i7.ButtonDirective, selector: "[monaButton]", inputs: ["disabled", "flat", "primary", "selected", "toggleable"], outputs: ["selectedChange"] }, { kind: "directive", type: i8.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i8.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i9.CalendarComponent, selector: "mona-calendar" }, { kind: "component", type: i10.TimeSelectorComponent, selector: "mona-time-selector", inputs: ["format", "hourFormat", "showSeconds"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: DateTimePickerComponent, decorators: [{
            type: Component,
            args: [{ selector: "mona-date-time-picker", changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => DateTimePickerComponent),
                            multi: true
                        }
                    ], template: "<div class=\"mona-date-time-picker\" [ngClass]=\"{'mona-disabled': disabled}\" #popupAnchor>\n    <mona-text-box [disabled]=\"disabled\" [readonly]=\"readonly\" [ngModel]=\"currentDateString\" (ngModelChange)=\"onDateStringEdit($event)\" (inputBlur)=\"onDateInputBlur()\">\n        <ng-template monaTextBoxSuffixTemplate>\n            <button monaButton [flat]=\"true\" (click)=\"onDateInputButtonClick()\" [disabled]=\"disabled\" [tabIndex]=\"-1\">\n                <fa-icon [icon]=\"dateIcon\"></fa-icon>\n            </button>\n        </ng-template>\n        <ng-template monaTextBoxSuffixTemplate>\n            <button monaButton [flat]=\"true\" (click)=\"onTimeInputButtonClick()\" [disabled]=\"disabled\" [tabIndex]=\"-1\">\n                <fa-icon [icon]=\"timeIcon\"></fa-icon>\n            </button>\n        </ng-template>\n    </mona-text-box>\n</div>\n\n<ng-template #datePopupTemplate>\n    <mona-calendar [disabledDates]=\"disabledDates\" [min]=\"min\" [max]=\"max\" [value]=\"value\" (valueChange)=\"onCalendarValueChange($event)\"></mona-calendar>\n</ng-template>\n\n<ng-template #timePopupTemplate>\n    <mona-time-selector [value]=\"value\" (valueChange)=\"onTimeSelectorValueChange($event)\"\n                        [hourFormat]=\"hourFormat\" [showSeconds]=\"showSeconds\"></mona-time-selector>\n</ng-template>\n", styles: ["div.mona-date-time-picker-times{display:flex;flex-direction:column;width:100%;align-items:center;justify-content:center;-webkit-user-select:none;user-select:none}div.mona-date-time-picker-times>div:first-child{display:flex}div.mona-date-time-picker-times>div:first-child>div{display:flex;flex-direction:column;align-items:center;justify-content:center;padding:0 4px}div.mona-date-time-picker-times>div:first-child>div>span{font-size:14px;font-weight:700;display:flex;align-items:center;justify-content:center}div.mona-date-time-picker-times>div:first-child>div mona-numeric-text-box{width:64px}div.mona-date-time-picker-times>div:last-child{padding:16px 0 0}div.mona-date-time-picker-times>div:last-child>button:not(:last-child){margin-right:4px}div.mona-date-time-picker-times fa-icon{font-size:18px}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i2.PopupService }]; }, propDecorators: { format: [{
                type: Input
            }], hourFormat: [{
                type: Input
            }], showSeconds: [{
                type: Input
            }], timePopupTemplateRef: [{
                type: ViewChild,
                args: ["timePopupTemplate"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS10aW1lLXBpY2tlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tb25hLXVpL3NyYy9saWIvZGF0ZS1pbnB1dHMvbW9kdWxlcy9kYXRlLXRpbWUtcGlja2VyL2NvbXBvbmVudHMvZGF0ZS10aW1lLXBpY2tlci9kYXRlLXRpbWUtcGlja2VyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL21vbmEtdWkvc3JjL2xpYi9kYXRlLWlucHV0cy9tb2R1bGVzL2RhdGUtdGltZS1waWNrZXIvY29tcG9uZW50cy9kYXRlLXRpbWUtcGlja2VyL2RhdGUtdGltZS1waWNrZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILHVCQUF1QixFQUV2QixTQUFTLEVBRVQsVUFBVSxFQUNWLEtBQUssRUFHTCxTQUFTLEVBQ1osTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLE9BQU8sRUFBa0IsTUFBTSxtQ0FBbUMsQ0FBQztBQUc1RSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSw0RUFBNEUsQ0FBQztBQUN6SCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7Ozs7Ozs7O0FBZW5ELE1BQU0sT0FBTyx1QkFBd0IsU0FBUSwyQkFBMkI7SUFlcEUsWUFDZ0MsR0FBc0IsRUFDdEIsVUFBbUMsRUFDbkMsWUFBMEIsRUFDMUIsWUFBMEI7UUFFdEQsS0FBSyxDQUFDLEdBQUcsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBTHZCLFFBQUcsR0FBSCxHQUFHLENBQW1CO1FBQ3RCLGVBQVUsR0FBVixVQUFVLENBQXlCO1FBQ25DLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQzFCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBbEIxQyxhQUFRLEdBQW1CLE9BQU8sQ0FBQztRQUduQyxXQUFNLEdBQVcsa0JBQWtCLENBQUM7UUFHN0MsZUFBVSxHQUFnQixJQUFJLENBQUM7UUFHL0IsZ0JBQVcsR0FBWSxLQUFLLENBQUM7SUFZcEMsQ0FBQztJQUVNLHNCQUFzQjtRQUN6QixJQUFJLENBQUMsSUFBSSxDQUFDLG9CQUFvQixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDN0MsT0FBTztTQUNWO1FBQ0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQztZQUNyQyxNQUFNLEVBQUUsSUFBSSxDQUFDLFdBQVc7WUFDeEIsT0FBTyxFQUFFLElBQUksQ0FBQyxvQkFBb0I7WUFDbEMsS0FBSyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLFdBQVc7WUFDaEQsVUFBVSxFQUFFLHdCQUF3QjtZQUNwQyxXQUFXLEVBQUUsS0FBSztZQUNsQixRQUFRLEVBQUUsS0FBSztZQUNmLG1CQUFtQixFQUFFLElBQUk7U0FDNUIsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVNLHlCQUF5QixDQUFDLElBQWlCO1FBQzlDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUIsQ0FBQzs4R0F6Q1EsdUJBQXVCO2tHQUF2Qix1QkFBdUIsb0lBUnJCO1lBQ1A7Z0JBQ0ksT0FBTyxFQUFFLGlCQUFpQjtnQkFDMUIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQztnQkFDdEQsS0FBSyxFQUFFLElBQUk7YUFDZDtTQUNKLDRLQzVCTCx5ekNBdUJBOzsyRkRPYSx1QkFBdUI7a0JBYm5DLFNBQVM7K0JBQ0ksdUJBQXVCLG1CQUdoQix1QkFBdUIsQ0FBQyxNQUFNLGFBQ3BDO3dCQUNQOzRCQUNJLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLHdCQUF3QixDQUFDOzRCQUN0RCxLQUFLLEVBQUUsSUFBSTt5QkFDZDtxQkFDSjt1TEFNZSxNQUFNO3NCQURyQixLQUFLO2dCQUlDLFVBQVU7c0JBRGhCLEtBQUs7Z0JBSUMsV0FBVztzQkFEakIsS0FBSztnQkFJQyxvQkFBb0I7c0JBRDFCLFNBQVM7dUJBQUMsbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBDb21wb25lbnQsXG4gICAgRWxlbWVudFJlZixcbiAgICBmb3J3YXJkUmVmLFxuICAgIElucHV0LFxuICAgIE9uSW5pdCxcbiAgICBUZW1wbGF0ZVJlZixcbiAgICBWaWV3Q2hpbGRcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IGZhQ2xvY2ssIEljb25EZWZpbml0aW9uIH0gZnJvbSBcIkBmb3J0YXdlc29tZS9mcmVlLXNvbGlkLXN2Zy1pY29uc1wiO1xuaW1wb3J0IHsgUG9wdXBTZXJ2aWNlIH0gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL3BvcHVwL3NlcnZpY2VzL3BvcHVwLnNlcnZpY2VcIjtcbmltcG9ydCB7IEZvY3VzTW9uaXRvciB9IGZyb20gXCJAYW5ndWxhci9jZGsvYTExeVwiO1xuaW1wb3J0IHsgQWJzdHJhY3REYXRlUGlja2VyQ29tcG9uZW50IH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbXBvbmVudHMvYWJzdHJhY3QtZGF0ZS1waWNrZXIvYWJzdHJhY3QtZGF0ZS1waWNrZXIuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJtb25hLWRhdGUtdGltZS1waWNrZXJcIixcbiAgICB0ZW1wbGF0ZVVybDogXCIuL2RhdGUtdGltZS1waWNrZXIuY29tcG9uZW50Lmh0bWxcIixcbiAgICBzdHlsZVVybHM6IFtcIi4vZGF0ZS10aW1lLXBpY2tlci5jb21wb25lbnQuc2Nzc1wiXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBEYXRlVGltZVBpY2tlckNvbXBvbmVudCksXG4gICAgICAgICAgICBtdWx0aTogdHJ1ZVxuICAgICAgICB9XG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBEYXRlVGltZVBpY2tlckNvbXBvbmVudCBleHRlbmRzIEFic3RyYWN0RGF0ZVBpY2tlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgcHVibGljIHJlYWRvbmx5IHRpbWVJY29uOiBJY29uRGVmaW5pdGlvbiA9IGZhQ2xvY2s7XG5cbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBvdmVycmlkZSBmb3JtYXQ6IHN0cmluZyA9IFwiZGQvTU0veXl5eSBISDptbVwiO1xuXG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgaG91ckZvcm1hdDogXCIxMlwiIHwgXCIyNFwiID0gXCIyNFwiO1xuXG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgc2hvd1NlY29uZHM6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIEBWaWV3Q2hpbGQoXCJ0aW1lUG9wdXBUZW1wbGF0ZVwiKVxuICAgIHB1YmxpYyB0aW1lUG9wdXBUZW1wbGF0ZVJlZj86IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoXG4gICAgICAgIHByb3RlY3RlZCBvdmVycmlkZSByZWFkb25seSBjZHI6IENoYW5nZURldGVjdG9yUmVmLFxuICAgICAgICBwcm90ZWN0ZWQgb3ZlcnJpZGUgcmVhZG9ubHkgZWxlbWVudFJlZjogRWxlbWVudFJlZjxIVE1MRWxlbWVudD4sXG4gICAgICAgIHByb3RlY3RlZCBvdmVycmlkZSByZWFkb25seSBmb2N1c01vbml0b3I6IEZvY3VzTW9uaXRvcixcbiAgICAgICAgcHJvdGVjdGVkIG92ZXJyaWRlIHJlYWRvbmx5IHBvcHVwU2VydmljZTogUG9wdXBTZXJ2aWNlXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKGNkciwgZWxlbWVudFJlZiwgZm9jdXNNb25pdG9yLCBwb3B1cFNlcnZpY2UpO1xuICAgIH1cblxuICAgIHB1YmxpYyBvblRpbWVJbnB1dEJ1dHRvbkNsaWNrKCk6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMudGltZVBvcHVwVGVtcGxhdGVSZWYgfHwgdGhpcy5yZWFkb25seSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucG9wdXBSZWYgPSB0aGlzLnBvcHVwU2VydmljZS5jcmVhdGUoe1xuICAgICAgICAgICAgYW5jaG9yOiB0aGlzLnBvcHVwQW5jaG9yLFxuICAgICAgICAgICAgY29udGVudDogdGhpcy50aW1lUG9wdXBUZW1wbGF0ZVJlZixcbiAgICAgICAgICAgIHdpZHRoOiB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5jbGllbnRXaWR0aCxcbiAgICAgICAgICAgIHBvcHVwQ2xhc3M6IFwibW9uYS10aW1lLXBpY2tlci1wb3B1cFwiLFxuICAgICAgICAgICAgaGFzQmFja2Ryb3A6IGZhbHNlLFxuICAgICAgICAgICAgd2l0aFB1c2g6IGZhbHNlLFxuICAgICAgICAgICAgY2xvc2VPbk91dHNpZGVDbGljazogdHJ1ZVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwdWJsaWMgb25UaW1lU2VsZWN0b3JWYWx1ZUNoYW5nZShkYXRlOiBEYXRlIHwgbnVsbCk6IHZvaWQge1xuICAgICAgICB0aGlzLnNldEN1cnJlbnREYXRlKGRhdGUpO1xuICAgIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJtb25hLWRhdGUtdGltZS1waWNrZXJcIiBbbmdDbGFzc109XCJ7J21vbmEtZGlzYWJsZWQnOiBkaXNhYmxlZH1cIiAjcG9wdXBBbmNob3I+XG4gICAgPG1vbmEtdGV4dC1ib3ggW2Rpc2FibGVkXT1cImRpc2FibGVkXCIgW3JlYWRvbmx5XT1cInJlYWRvbmx5XCIgW25nTW9kZWxdPVwiY3VycmVudERhdGVTdHJpbmdcIiAobmdNb2RlbENoYW5nZSk9XCJvbkRhdGVTdHJpbmdFZGl0KCRldmVudClcIiAoaW5wdXRCbHVyKT1cIm9uRGF0ZUlucHV0Qmx1cigpXCI+XG4gICAgICAgIDxuZy10ZW1wbGF0ZSBtb25hVGV4dEJveFN1ZmZpeFRlbXBsYXRlPlxuICAgICAgICAgICAgPGJ1dHRvbiBtb25hQnV0dG9uIFtmbGF0XT1cInRydWVcIiAoY2xpY2spPVwib25EYXRlSW5wdXRCdXR0b25DbGljaygpXCIgW2Rpc2FibGVkXT1cImRpc2FibGVkXCIgW3RhYkluZGV4XT1cIi0xXCI+XG4gICAgICAgICAgICAgICAgPGZhLWljb24gW2ljb25dPVwiZGF0ZUljb25cIj48L2ZhLWljb24+XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgPG5nLXRlbXBsYXRlIG1vbmFUZXh0Qm94U3VmZml4VGVtcGxhdGU+XG4gICAgICAgICAgICA8YnV0dG9uIG1vbmFCdXR0b24gW2ZsYXRdPVwidHJ1ZVwiIChjbGljayk9XCJvblRpbWVJbnB1dEJ1dHRvbkNsaWNrKClcIiBbZGlzYWJsZWRdPVwiZGlzYWJsZWRcIiBbdGFiSW5kZXhdPVwiLTFcIj5cbiAgICAgICAgICAgICAgICA8ZmEtaWNvbiBbaWNvbl09XCJ0aW1lSWNvblwiPjwvZmEtaWNvbj5cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgIDwvbW9uYS10ZXh0LWJveD5cbjwvZGl2PlxuXG48bmctdGVtcGxhdGUgI2RhdGVQb3B1cFRlbXBsYXRlPlxuICAgIDxtb25hLWNhbGVuZGFyIFtkaXNhYmxlZERhdGVzXT1cImRpc2FibGVkRGF0ZXNcIiBbbWluXT1cIm1pblwiIFttYXhdPVwibWF4XCIgW3ZhbHVlXT1cInZhbHVlXCIgKHZhbHVlQ2hhbmdlKT1cIm9uQ2FsZW5kYXJWYWx1ZUNoYW5nZSgkZXZlbnQpXCI+PC9tb25hLWNhbGVuZGFyPlxuPC9uZy10ZW1wbGF0ZT5cblxuPG5nLXRlbXBsYXRlICN0aW1lUG9wdXBUZW1wbGF0ZT5cbiAgICA8bW9uYS10aW1lLXNlbGVjdG9yIFt2YWx1ZV09XCJ2YWx1ZVwiICh2YWx1ZUNoYW5nZSk9XCJvblRpbWVTZWxlY3RvclZhbHVlQ2hhbmdlKCRldmVudClcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2hvdXJGb3JtYXRdPVwiaG91ckZvcm1hdFwiIFtzaG93U2Vjb25kc109XCJzaG93U2Vjb25kc1wiPjwvbW9uYS10aW1lLXNlbGVjdG9yPlxuPC9uZy10ZW1wbGF0ZT5cbiJdfQ==