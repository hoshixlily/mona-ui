import { ChangeDetectionStrategy, Component } from "@angular/core";
import { DateTime } from "luxon";
import { Dictionary } from "@mirei/ts-collections";
import { faChevronLeft, faChevronRight } from "@fortawesome/free-solid-svg-icons";
import { AbstractDateInputComponent } from "../../../../components/abstract-date-input/abstract-date-input.component";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@fortawesome/angular-fontawesome";
import * as i3 from "../../../../../buttons/modules/button/directives/button.directive";
import * as i4 from "../../../../../pipes/slice.pipe";
import * as i5 from "../../../../../pipes/date-comparer.pipe";
import * as i6 from "../../../../../pipes/date-include.pipe";
export class CalendarComponent extends AbstractDateInputComponent {
    constructor(cdr) {
        super(cdr);
        this.cdr = cdr;
        this.nextMonthIcon = faChevronRight;
        this.prevMonthIcon = faChevronLeft;
        this.calendarView = "month";
        this.decadeYears = [];
        this.monthBounds = { start: new Date(), end: new Date() };
        this.monthlyViewDict = new Dictionary();
    }
    ngOnInit() {
        super.ngOnInit();
        const date = this.value ?? DateTime.now().toJSDate();
        this.prepareMonthlyViewDictionary(date);
        this.navigatedDate = date;
    }
    onDayClick(date) {
        if (this.value) {
            const oldMonth = DateTime.fromJSDate(this.value).month;
            const date1 = DateTime.fromJSDate(date);
            const newDate = DateTime.fromJSDate(this.value)
                .set({ day: date1.day, month: date1.month, year: date1.year })
                .toJSDate();
            this.setCurrentDate(newDate);
            this.navigatedDate = newDate;
            if (oldMonth !== DateTime.fromJSDate(newDate).month) {
                this.prepareMonthlyViewDictionary(newDate);
            }
        }
        else {
            this.setCurrentDate(date);
            this.navigatedDate = date;
            this.prepareMonthlyViewDictionary(date);
        }
        this.cdr.markForCheck();
    }
    onMonthClick(month) {
        this.navigatedDate = DateTime.fromJSDate(this.navigatedDate).set({ month }).toJSDate();
        this.prepareMonthlyViewDictionary(this.navigatedDate);
        this.calendarView = "month";
    }
    onNavigationClick(direction) {
        if (this.calendarView === "month") {
            const date = DateTime.fromJSDate(this.navigatedDate);
            this.navigatedDate =
                direction === "prev" ? date.minus({ months: 1 }).toJSDate() : date.plus({ months: 1 }).toJSDate();
            this.prepareMonthlyViewDictionary(this.navigatedDate);
        }
        else if (this.calendarView === "year") {
            const date = DateTime.fromJSDate(this.navigatedDate);
            this.navigatedDate =
                direction === "prev" ? date.minus({ years: 1 }).toJSDate() : date.plus({ years: 1 }).toJSDate();
        }
        else if (this.calendarView === "decade") {
            const date = DateTime.fromJSDate(this.navigatedDate);
            this.navigatedDate =
                direction === "prev" ? date.minus({ years: 10 }).toJSDate() : date.plus({ years: 10 }).toJSDate();
            this.prepareDecadeYears();
        }
        this.cdr.markForCheck();
    }
    onViewChangeClick(view) {
        if (view === "decade") {
            this.prepareDecadeYears();
        }
        this.calendarView = view;
    }
    onYearClick(year) {
        this.navigatedDate = DateTime.fromJSDate(this.navigatedDate).set({ year }).toJSDate();
        this.calendarView = "year";
    }
    prepareDecadeYears() {
        const date = DateTime.fromJSDate(this.navigatedDate);
        const year = date.year;
        const decadeStart = year - (year % 10);
        this.decadeYears = Array.from({ length: 10 }, (_, i) => decadeStart + i);
    }
    prepareMonthlyViewDictionary(day) {
        const firstDayOfMonth = DateTime.fromJSDate(day).startOf("month");
        const lastDayOfMonth = DateTime.fromJSDate(day).endOf("month");
        const firstDayOfCalendar = firstDayOfMonth.startOf("week");
        const lastDayOfCalendar = lastDayOfMonth.endOf("week");
        const dictionary = new Dictionary();
        for (let i = firstDayOfCalendar; i <= lastDayOfCalendar; i = i.plus({ days: 1 })) {
            dictionary.add(i.toJSDate(), i.day);
        }
        if (lastDayOfMonth.weekday === 7) {
            for (let i = 0; i < 7; i++) {
                dictionary.add(lastDayOfMonth.plus({ days: i + 1 }).toJSDate(), i + 1);
            }
        }
        this.monthlyViewDict = dictionary;
        this.monthBounds = { start: firstDayOfMonth.toJSDate(), end: lastDayOfMonth.toJSDate() };
        this.cdr.markForCheck();
    }
    get timezone() {
        return DateTime.local().zoneName;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: CalendarComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.0", type: CalendarComponent, selector: "mona-calendar", usesInheritance: true, ngImport: i0, template: "<div class=\"mona-calendar\">\n    <div class=\"mona-calendar-header\">\n        <div>\n            <button monaButton (click)=\"onNavigationClick('prev')\">\n                <fa-icon [icon]=\"prevMonthIcon\"></fa-icon>\n            </button>\n        </div>\n        <div>\n            <button monaButton *ngIf=\"calendarView==='month'\" (click)=\"onViewChangeClick('year')\">{{navigatedDate|date:'MMMM yyyy':timezone}}</button>\n            <button monaButton *ngIf=\"calendarView==='year'\" (click)=\"onViewChangeClick('decade')\">{{navigatedDate|date:'yyyy':timezone}}</button>\n            <button monaButton *ngIf=\"calendarView==='decade'\">{{decadeYears[0]}} - {{decadeYears[decadeYears.length-1]}}</button>\n        </div>\n        <div>\n            <button monaButton (click)=\"onNavigationClick('next')\">\n                <fa-icon [icon]=\"nextMonthIcon\"></fa-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"mona-calendar-month-view\" *ngIf=\"calendarView==='month'\" style=\"width: 100%;\">\n        <table class=\"mona-calendar-month-view-table\">\n            <thead>\n            <tr>\n                <th>Mon</th>\n                <th>Tue</th>\n                <th>Wed</th>\n                <th>Thu</th>\n                <th>Fri</th>\n                <th>Sat</th>\n                <th>Sun</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td *ngFor=\"let entry of monthlyViewDict | monaSlice:0:7\" (click)=\"onDayClick(entry.key)\"\n                    [ngClass]=\"{'mona-calendar-other-month': entry.key|monaDateComparer:monthBounds.start:'<',\n                        'mona-selected':entry.key|monaDateComparer:value:'==',\n                        'mona-disabled': (entry.key|monaDateInclude:disabledDates)||(min !== null && (entry.key|monaDateComparer:min:'<'))||(max !== null && (entry.key|monaDateComparer:max:'>'))}\">\n                    <span>{{entry.value}}</span>\n                </td>\n            </tr>\n            <tr>\n                <td *ngFor=\"let entry of monthlyViewDict | monaSlice:7:14\" (click)=\"onDayClick(entry.key)\"\n                    [ngClass]=\"{'mona-selected':entry.key|monaDateComparer:value:'==',\n                        'mona-disabled': (entry.key|monaDateInclude:disabledDates)||(min !== null && (entry.key|monaDateComparer:min:'<'))||(max !== null && (entry.key|monaDateComparer:max:'>'))}\">\n                    <span>{{entry.value}}</span>\n                </td>\n            </tr>\n            <tr>\n                <td *ngFor=\"let entry of monthlyViewDict | monaSlice:14:21\" (click)=\"onDayClick(entry.key)\"\n                    [ngClass]=\"{'mona-selected':entry.key|monaDateComparer:value:'==',\n                        'mona-disabled': (entry.key|monaDateInclude:disabledDates)||(min !== null && (entry.key|monaDateComparer:min:'<'))||(max !== null && (entry.key|monaDateComparer:max:'>'))}\">\n                    <span>{{entry.value}}</span>\n                </td>\n            </tr>\n            <tr>\n                <td *ngFor=\"let entry of monthlyViewDict | monaSlice:21:28\" (click)=\"onDayClick(entry.key)\"\n                    [ngClass]=\"{'mona-selected':entry.key|monaDateComparer:value:'==',\n                        'mona-disabled': (entry.key|monaDateInclude:disabledDates)||(min !== null && (entry.key|monaDateComparer:min:'<'))||(max !== null && (entry.key|monaDateComparer:max:'>'))}\">\n                    <span>{{entry.value}}</span>\n                </td>\n            </tr>\n            <tr>\n                <td *ngFor=\"let entry of monthlyViewDict | monaSlice:28:35\" (click)=\"onDayClick(entry.key)\"\n                    [ngClass]=\"{'mona-calendar-other-month':entry.key|monaDateComparer:monthBounds.end:'>',\n                        'mona-selected':entry.key|monaDateComparer:value:'==',\n                        'mona-disabled': (entry.key|monaDateInclude:disabledDates)||(min !== null && (entry.key|monaDateComparer:min:'<'))||(max !== null && (entry.key|monaDateComparer:max:'>'))}\">\n                    <span>{{entry.value}}</span>\n                </td>\n            </tr>\n            <tr>\n                <td *ngFor=\"let entry of monthlyViewDict | monaSlice:35:monthlyViewDict.length\" (click)=\"onDayClick(entry.key)\"\n                    [ngClass]=\"{'mona-calendar-other-month': entry.key|monaDateComparer:monthBounds.end:'>',\n                        'mona-selected':entry.key|monaDateComparer:value:'==',\n                        'mona-disabled': (entry.key|monaDateInclude:disabledDates)||(min !== null && (entry.key|monaDateComparer:min:'<'))||(max !== null && (entry.key|monaDateComparer:max:'>'))}\">\n                    <span>{{entry.value}}</span>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"mona-calendar-year-view\" *ngIf=\"calendarView==='year'\">\n        <table class=\"mona-calendar-year-view-table\">\n            <tr>\n                <td (click)=\"onMonthClick(1)\">Jan</td>\n                <td (click)=\"onMonthClick(2)\">Feb</td>\n                <td (click)=\"onMonthClick(3)\">Mar</td>\n            </tr>\n            <tr>\n                <td (click)=\"onMonthClick(4)\">Apr</td>\n                <td (click)=\"onMonthClick(5)\">May</td>\n                <td (click)=\"onMonthClick(6)\">Jun</td>\n            </tr>\n            <tr>\n                <td (click)=\"onMonthClick(7)\">Jul</td>\n                <td (click)=\"onMonthClick(8)\">Aug</td>\n                <td (click)=\"onMonthClick(9)\">Sep</td>\n            </tr>\n            <tr>\n                <td (click)=\"onMonthClick(10)\">Oct</td>\n                <td (click)=\"onMonthClick(11)\">Nov</td>\n                <td (click)=\"onMonthClick(12)\">Dec</td>\n            </tr>\n        </table>\n    </div>\n    <div class=\"mona-calendar-decade-view\" *ngIf=\"calendarView==='decade'\">\n        <table class=\"mona-calendar-decade-view-table\">\n            <tr>\n                <td (click)=\"onYearClick(decadeYears[0])\">{{decadeYears[0]}}</td>\n                <td (click)=\"onYearClick(decadeYears[1])\">{{decadeYears[1]}}</td>\n                <td (click)=\"onYearClick(decadeYears[2])\">{{decadeYears[2]}}</td>\n                <td (click)=\"onYearClick(decadeYears[3])\">{{decadeYears[3]}}</td>\n            </tr>\n            <tr>\n                <td (click)=\"onYearClick(decadeYears[4])\">{{decadeYears[4]}}</td>\n                <td (click)=\"onYearClick(decadeYears[5])\">{{decadeYears[5]}}</td>\n                <td (click)=\"onYearClick(decadeYears[6])\">{{decadeYears[6]}}</td>\n                <td (click)=\"onYearClick(decadeYears[7])\">{{decadeYears[7]}}</td>\n            </tr>\n            <tr>\n                <td (click)=\"onYearClick(decadeYears[8])\">{{decadeYears[8]}}</td>\n                <td (click)=\"onYearClick(decadeYears[9])\">{{decadeYears[9]}}</td>\n            </tr>\n        </table>\n    </div>\n</div>\n", styles: ["table.mona-calendar-month-view-table{width:100%;border-collapse:collapse}table.mona-calendar-month-view-table td,table.mona-calendar-month-view-table th{text-align:center;width:40px;height:32px}table.mona-calendar-month-view-table thead{pointer-events:none}table.mona-calendar-month-view-table thead th{text-transform:uppercase;padding:0 0 4px;font-weight:600;box-shadow:inset 0 -1px 0 var(--mona-text);color:var(--mona-text)}table.mona-calendar-month-view-table tbody td{padding:4px 0;cursor:pointer}table.mona-calendar-month-view-table tbody td.mona-calendar-other-month{color:var(--mona-text);opacity:.35}table.mona-calendar-month-view-table tbody tr:first-child td{margin-top:4px}table.mona-calendar-year-view-table{width:100%;border-collapse:collapse;margin-top:10px}table.mona-calendar-year-view-table td,table.mona-calendar-year-view-table th{text-align:center;height:48px;font-weight:600;cursor:pointer}table.mona-calendar-decade-view-table{width:100%;border-collapse:collapse;margin-top:10px}table.mona-calendar-decade-view-table td,table.mona-calendar-decade-view-table th{text-align:center;height:48px;font-weight:600;cursor:pointer}div.mona-calendar-header{display:flex}div.mona-calendar-header>div:first-child,div.mona-calendar-header>div:last-child{display:flex;align-items:center;justify-content:center;cursor:pointer}div.mona-calendar-header>div:nth-child(2){flex:1}div.mona-calendar-header>div:nth-child(2) button{border-left:none;border-right:none;width:100%}div.mona-calendar-month-view,div.mona-calendar-year-view,div.mona-calendar-decade-view{border-left:1px solid var(--mona-border-color);border-right:1px solid var(--mona-border-color);border-bottom:1px solid var(--mona-border-color)}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.FaIconComponent, selector: "fa-icon", inputs: ["icon", "title", "spin", "pulse", "mask", "styles", "flip", "size", "pull", "border", "inverse", "symbol", "rotate", "fixedWidth", "classes", "transform", "a11yRole"] }, { kind: "directive", type: i3.ButtonDirective, selector: "[monaButton]", inputs: ["disabled", "flat", "primary", "selected", "toggleable"], outputs: ["selectedChange"] }, { kind: "pipe", type: i1.DatePipe, name: "date" }, { kind: "pipe", type: i4.SlicePipe, name: "monaSlice" }, { kind: "pipe", type: i5.DateComparerPipe, name: "monaDateComparer" }, { kind: "pipe", type: i6.DateIncludePipe, name: "monaDateInclude" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: CalendarComponent, decorators: [{
            type: Component,
            args: [{ selector: "mona-calendar", changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"mona-calendar\">\n    <div class=\"mona-calendar-header\">\n        <div>\n            <button monaButton (click)=\"onNavigationClick('prev')\">\n                <fa-icon [icon]=\"prevMonthIcon\"></fa-icon>\n            </button>\n        </div>\n        <div>\n            <button monaButton *ngIf=\"calendarView==='month'\" (click)=\"onViewChangeClick('year')\">{{navigatedDate|date:'MMMM yyyy':timezone}}</button>\n            <button monaButton *ngIf=\"calendarView==='year'\" (click)=\"onViewChangeClick('decade')\">{{navigatedDate|date:'yyyy':timezone}}</button>\n            <button monaButton *ngIf=\"calendarView==='decade'\">{{decadeYears[0]}} - {{decadeYears[decadeYears.length-1]}}</button>\n        </div>\n        <div>\n            <button monaButton (click)=\"onNavigationClick('next')\">\n                <fa-icon [icon]=\"nextMonthIcon\"></fa-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"mona-calendar-month-view\" *ngIf=\"calendarView==='month'\" style=\"width: 100%;\">\n        <table class=\"mona-calendar-month-view-table\">\n            <thead>\n            <tr>\n                <th>Mon</th>\n                <th>Tue</th>\n                <th>Wed</th>\n                <th>Thu</th>\n                <th>Fri</th>\n                <th>Sat</th>\n                <th>Sun</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td *ngFor=\"let entry of monthlyViewDict | monaSlice:0:7\" (click)=\"onDayClick(entry.key)\"\n                    [ngClass]=\"{'mona-calendar-other-month': entry.key|monaDateComparer:monthBounds.start:'<',\n                        'mona-selected':entry.key|monaDateComparer:value:'==',\n                        'mona-disabled': (entry.key|monaDateInclude:disabledDates)||(min !== null && (entry.key|monaDateComparer:min:'<'))||(max !== null && (entry.key|monaDateComparer:max:'>'))}\">\n                    <span>{{entry.value}}</span>\n                </td>\n            </tr>\n            <tr>\n                <td *ngFor=\"let entry of monthlyViewDict | monaSlice:7:14\" (click)=\"onDayClick(entry.key)\"\n                    [ngClass]=\"{'mona-selected':entry.key|monaDateComparer:value:'==',\n                        'mona-disabled': (entry.key|monaDateInclude:disabledDates)||(min !== null && (entry.key|monaDateComparer:min:'<'))||(max !== null && (entry.key|monaDateComparer:max:'>'))}\">\n                    <span>{{entry.value}}</span>\n                </td>\n            </tr>\n            <tr>\n                <td *ngFor=\"let entry of monthlyViewDict | monaSlice:14:21\" (click)=\"onDayClick(entry.key)\"\n                    [ngClass]=\"{'mona-selected':entry.key|monaDateComparer:value:'==',\n                        'mona-disabled': (entry.key|monaDateInclude:disabledDates)||(min !== null && (entry.key|monaDateComparer:min:'<'))||(max !== null && (entry.key|monaDateComparer:max:'>'))}\">\n                    <span>{{entry.value}}</span>\n                </td>\n            </tr>\n            <tr>\n                <td *ngFor=\"let entry of monthlyViewDict | monaSlice:21:28\" (click)=\"onDayClick(entry.key)\"\n                    [ngClass]=\"{'mona-selected':entry.key|monaDateComparer:value:'==',\n                        'mona-disabled': (entry.key|monaDateInclude:disabledDates)||(min !== null && (entry.key|monaDateComparer:min:'<'))||(max !== null && (entry.key|monaDateComparer:max:'>'))}\">\n                    <span>{{entry.value}}</span>\n                </td>\n            </tr>\n            <tr>\n                <td *ngFor=\"let entry of monthlyViewDict | monaSlice:28:35\" (click)=\"onDayClick(entry.key)\"\n                    [ngClass]=\"{'mona-calendar-other-month':entry.key|monaDateComparer:monthBounds.end:'>',\n                        'mona-selected':entry.key|monaDateComparer:value:'==',\n                        'mona-disabled': (entry.key|monaDateInclude:disabledDates)||(min !== null && (entry.key|monaDateComparer:min:'<'))||(max !== null && (entry.key|monaDateComparer:max:'>'))}\">\n                    <span>{{entry.value}}</span>\n                </td>\n            </tr>\n            <tr>\n                <td *ngFor=\"let entry of monthlyViewDict | monaSlice:35:monthlyViewDict.length\" (click)=\"onDayClick(entry.key)\"\n                    [ngClass]=\"{'mona-calendar-other-month': entry.key|monaDateComparer:monthBounds.end:'>',\n                        'mona-selected':entry.key|monaDateComparer:value:'==',\n                        'mona-disabled': (entry.key|monaDateInclude:disabledDates)||(min !== null && (entry.key|monaDateComparer:min:'<'))||(max !== null && (entry.key|monaDateComparer:max:'>'))}\">\n                    <span>{{entry.value}}</span>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"mona-calendar-year-view\" *ngIf=\"calendarView==='year'\">\n        <table class=\"mona-calendar-year-view-table\">\n            <tr>\n                <td (click)=\"onMonthClick(1)\">Jan</td>\n                <td (click)=\"onMonthClick(2)\">Feb</td>\n                <td (click)=\"onMonthClick(3)\">Mar</td>\n            </tr>\n            <tr>\n                <td (click)=\"onMonthClick(4)\">Apr</td>\n                <td (click)=\"onMonthClick(5)\">May</td>\n                <td (click)=\"onMonthClick(6)\">Jun</td>\n            </tr>\n            <tr>\n                <td (click)=\"onMonthClick(7)\">Jul</td>\n                <td (click)=\"onMonthClick(8)\">Aug</td>\n                <td (click)=\"onMonthClick(9)\">Sep</td>\n            </tr>\n            <tr>\n                <td (click)=\"onMonthClick(10)\">Oct</td>\n                <td (click)=\"onMonthClick(11)\">Nov</td>\n                <td (click)=\"onMonthClick(12)\">Dec</td>\n            </tr>\n        </table>\n    </div>\n    <div class=\"mona-calendar-decade-view\" *ngIf=\"calendarView==='decade'\">\n        <table class=\"mona-calendar-decade-view-table\">\n            <tr>\n                <td (click)=\"onYearClick(decadeYears[0])\">{{decadeYears[0]}}</td>\n                <td (click)=\"onYearClick(decadeYears[1])\">{{decadeYears[1]}}</td>\n                <td (click)=\"onYearClick(decadeYears[2])\">{{decadeYears[2]}}</td>\n                <td (click)=\"onYearClick(decadeYears[3])\">{{decadeYears[3]}}</td>\n            </tr>\n            <tr>\n                <td (click)=\"onYearClick(decadeYears[4])\">{{decadeYears[4]}}</td>\n                <td (click)=\"onYearClick(decadeYears[5])\">{{decadeYears[5]}}</td>\n                <td (click)=\"onYearClick(decadeYears[6])\">{{decadeYears[6]}}</td>\n                <td (click)=\"onYearClick(decadeYears[7])\">{{decadeYears[7]}}</td>\n            </tr>\n            <tr>\n                <td (click)=\"onYearClick(decadeYears[8])\">{{decadeYears[8]}}</td>\n                <td (click)=\"onYearClick(decadeYears[9])\">{{decadeYears[9]}}</td>\n            </tr>\n        </table>\n    </div>\n</div>\n", styles: ["table.mona-calendar-month-view-table{width:100%;border-collapse:collapse}table.mona-calendar-month-view-table td,table.mona-calendar-month-view-table th{text-align:center;width:40px;height:32px}table.mona-calendar-month-view-table thead{pointer-events:none}table.mona-calendar-month-view-table thead th{text-transform:uppercase;padding:0 0 4px;font-weight:600;box-shadow:inset 0 -1px 0 var(--mona-text);color:var(--mona-text)}table.mona-calendar-month-view-table tbody td{padding:4px 0;cursor:pointer}table.mona-calendar-month-view-table tbody td.mona-calendar-other-month{color:var(--mona-text);opacity:.35}table.mona-calendar-month-view-table tbody tr:first-child td{margin-top:4px}table.mona-calendar-year-view-table{width:100%;border-collapse:collapse;margin-top:10px}table.mona-calendar-year-view-table td,table.mona-calendar-year-view-table th{text-align:center;height:48px;font-weight:600;cursor:pointer}table.mona-calendar-decade-view-table{width:100%;border-collapse:collapse;margin-top:10px}table.mona-calendar-decade-view-table td,table.mona-calendar-decade-view-table th{text-align:center;height:48px;font-weight:600;cursor:pointer}div.mona-calendar-header{display:flex}div.mona-calendar-header>div:first-child,div.mona-calendar-header>div:last-child{display:flex;align-items:center;justify-content:center;cursor:pointer}div.mona-calendar-header>div:nth-child(2){flex:1}div.mona-calendar-header>div:nth-child(2) button{border-left:none;border-right:none;width:100%}div.mona-calendar-month-view,div.mona-calendar-year-view,div.mona-calendar-decade-view{border-left:1px solid var(--mona-border-color);border-right:1px solid var(--mona-border-color);border-bottom:1px solid var(--mona-border-color)}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; } });
//# sourceMappingURL=data:application/json;base64,