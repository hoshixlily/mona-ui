import { ChangeDetectionStrategy, Component, forwardRef, Input } from "@angular/core";
import { AbstractDatePickerComponent } from "../../../../components/abstract-date-picker/abstract-date-picker.component";
import { NG_VALUE_ACCESSOR } from "@angular/forms";
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/a11y";
import * as i2 from "../../../../../popup/services/popup.service";
import * as i3 from "@angular/common";
import * as i4 from "../../../../../inputs/modules/text-box/components/text-box/text-box.component";
import * as i5 from "../../../../../inputs/modules/text-box/directives/text-box-suffix-template.directive";
import * as i6 from "@angular/forms";
import * as i7 from "@fortawesome/angular-fontawesome";
import * as i8 from "../../../../../buttons/modules/button/directives/button.directive";
import * as i9 from "../../../calendar/components/calendar/calendar.component";
export class DatePickerComponent extends AbstractDatePickerComponent {
    constructor(cdr, elementRef, focusMonitor, popupService) {
        super(cdr, elementRef, focusMonitor, popupService);
        this.cdr = cdr;
        this.elementRef = elementRef;
        this.focusMonitor = focusMonitor;
        this.popupService = popupService;
        this.format = "dd/MM/yyyy";
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: DatePickerComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: i2.PopupService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.0", type: DatePickerComponent, selector: "mona-date-picker", inputs: { format: "format" }, providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => DatePickerComponent),
                multi: true
            }
        ], usesInheritance: true, ngImport: i0, template: "<div class=\"mona-date-picker\" [ngClass]=\"{'mona-disabled': disabled}\" #popupAnchor>\n    <mona-text-box [disabled]=\"disabled\" [readonly]=\"readonly\" [ngModel]=\"currentDateString\" (ngModelChange)=\"onDateStringEdit($event)\" (inputBlur)=\"onDateInputBlur()\">\n        <ng-template monaTextBoxSuffixTemplate>\n            <button monaButton [flat]=\"true\" (click)=\"onDateInputButtonClick()\" [disabled]=\"disabled\" [tabIndex]=\"-1\">\n                <fa-icon [icon]=\"dateIcon\"></fa-icon>\n            </button>\n        </ng-template>\n    </mona-text-box>\n</div>\n\n<ng-template #datePopupTemplate>\n    <mona-calendar [disabledDates]=\"disabledDates\" [min]=\"min\" [max]=\"max\" [value]=\"value\" (valueChange)=\"onCalendarValueChange($event)\"></mona-calendar>\n</ng-template>\n", styles: [""], dependencies: [{ kind: "directive", type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "component", type: i4.TextBoxComponent, selector: "mona-text-box", inputs: ["disabled", "readonly"], outputs: ["inputBlur", "inputFocus"] }, { kind: "directive", type: i5.TextBoxSuffixTemplateDirective, selector: "ng-template[monaTextBoxSuffixTemplate]" }, { kind: "directive", type: i6.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i6.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i7.FaIconComponent, selector: "fa-icon", inputs: ["icon", "title", "spin", "pulse", "mask", "styles", "flip", "size", "pull", "border", "inverse", "symbol", "rotate", "fixedWidth", "classes", "transform", "a11yRole"] }, { kind: "directive", type: i8.ButtonDirective, selector: "[monaButton]", inputs: ["disabled", "flat", "primary", "selected", "toggleable"], outputs: ["selectedChange"] }, { kind: "component", type: i9.CalendarComponent, selector: "mona-calendar" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: DatePickerComponent, decorators: [{
            type: Component,
            args: [{ selector: "mona-date-picker", changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => DatePickerComponent),
                            multi: true
                        }
                    ], template: "<div class=\"mona-date-picker\" [ngClass]=\"{'mona-disabled': disabled}\" #popupAnchor>\n    <mona-text-box [disabled]=\"disabled\" [readonly]=\"readonly\" [ngModel]=\"currentDateString\" (ngModelChange)=\"onDateStringEdit($event)\" (inputBlur)=\"onDateInputBlur()\">\n        <ng-template monaTextBoxSuffixTemplate>\n            <button monaButton [flat]=\"true\" (click)=\"onDateInputButtonClick()\" [disabled]=\"disabled\" [tabIndex]=\"-1\">\n                <fa-icon [icon]=\"dateIcon\"></fa-icon>\n            </button>\n        </ng-template>\n    </mona-text-box>\n</div>\n\n<ng-template #datePopupTemplate>\n    <mona-calendar [disabledDates]=\"disabledDates\" [min]=\"min\" [max]=\"max\" [value]=\"value\" (valueChange)=\"onCalendarValueChange($event)\"></mona-calendar>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i2.PopupService }]; }, propDecorators: { format: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1waWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbW9uYS11aS9zcmMvbGliL2RhdGUtaW5wdXRzL21vZHVsZXMvZGF0ZS1waWNrZXIvY29tcG9uZW50cy9kYXRlLXBpY2tlci9kYXRlLXBpY2tlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tb25hLXVpL3NyYy9saWIvZGF0ZS1pbnB1dHMvbW9kdWxlcy9kYXRlLXBpY2tlci9jb21wb25lbnRzL2RhdGUtcGlja2VyL2RhdGUtcGlja2VyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCx1QkFBdUIsRUFFdkIsU0FBUyxFQUVULFVBQVUsRUFDVixLQUFLLEVBRVIsTUFBTSxlQUFlLENBQUM7QUFHdkIsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sNEVBQTRFLENBQUM7QUFDekgsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7Ozs7Ozs7O0FBZW5ELE1BQU0sT0FBTyxtQkFBb0IsU0FBUSwyQkFBMkI7SUFJaEUsWUFDZ0MsR0FBc0IsRUFDdEIsVUFBbUMsRUFDbkMsWUFBMEIsRUFDMUIsWUFBMEI7UUFFdEQsS0FBSyxDQUFDLEdBQUcsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBTHZCLFFBQUcsR0FBSCxHQUFHLENBQW1CO1FBQ3RCLGVBQVUsR0FBVixVQUFVLENBQXlCO1FBQ25DLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQzFCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBTjFDLFdBQU0sR0FBVyxZQUFZLENBQUM7SUFTOUMsQ0FBQzs4R0FYUSxtQkFBbUI7a0dBQW5CLG1CQUFtQix5RUFSakI7WUFDUDtnQkFDSSxPQUFPLEVBQUUsaUJBQWlCO2dCQUMxQixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLG1CQUFtQixDQUFDO2dCQUNsRCxLQUFLLEVBQUUsSUFBSTthQUNkO1NBQ0osaURDekJMLCt4QkFhQTs7MkZEY2EsbUJBQW1CO2tCQWIvQixTQUFTOytCQUNJLGtCQUFrQixtQkFHWCx1QkFBdUIsQ0FBQyxNQUFNLGFBQ3BDO3dCQUNQOzRCQUNJLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLG9CQUFvQixDQUFDOzRCQUNsRCxLQUFLLEVBQUUsSUFBSTt5QkFDZDtxQkFDSjt1TEFJZSxNQUFNO3NCQURyQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBDb21wb25lbnQsXG4gICAgRWxlbWVudFJlZixcbiAgICBmb3J3YXJkUmVmLFxuICAgIElucHV0LFxuICAgIE9uSW5pdFxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgUG9wdXBTZXJ2aWNlIH0gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL3BvcHVwL3NlcnZpY2VzL3BvcHVwLnNlcnZpY2VcIjtcbmltcG9ydCB7IEZvY3VzTW9uaXRvciB9IGZyb20gXCJAYW5ndWxhci9jZGsvYTExeVwiO1xuaW1wb3J0IHsgQWJzdHJhY3REYXRlUGlja2VyQ29tcG9uZW50IH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbXBvbmVudHMvYWJzdHJhY3QtZGF0ZS1waWNrZXIvYWJzdHJhY3QtZGF0ZS1waWNrZXIuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJtb25hLWRhdGUtcGlja2VyXCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9kYXRlLXBpY2tlci5jb21wb25lbnQuaHRtbFwiLFxuICAgIHN0eWxlVXJsczogW1wiLi9kYXRlLXBpY2tlci5jb21wb25lbnQuc2Nzc1wiXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBEYXRlUGlja2VyQ29tcG9uZW50KSxcbiAgICAgICAgICAgIG11bHRpOiB0cnVlXG4gICAgICAgIH1cbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIERhdGVQaWNrZXJDb21wb25lbnQgZXh0ZW5kcyBBYnN0cmFjdERhdGVQaWNrZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIG92ZXJyaWRlIGZvcm1hdDogc3RyaW5nID0gXCJkZC9NTS95eXl5XCI7XG5cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoXG4gICAgICAgIHByb3RlY3RlZCBvdmVycmlkZSByZWFkb25seSBjZHI6IENoYW5nZURldGVjdG9yUmVmLFxuICAgICAgICBwcm90ZWN0ZWQgb3ZlcnJpZGUgcmVhZG9ubHkgZWxlbWVudFJlZjogRWxlbWVudFJlZjxIVE1MRWxlbWVudD4sXG4gICAgICAgIHByb3RlY3RlZCBvdmVycmlkZSByZWFkb25seSBmb2N1c01vbml0b3I6IEZvY3VzTW9uaXRvcixcbiAgICAgICAgcHJvdGVjdGVkIG92ZXJyaWRlIHJlYWRvbmx5IHBvcHVwU2VydmljZTogUG9wdXBTZXJ2aWNlXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKGNkciwgZWxlbWVudFJlZiwgZm9jdXNNb25pdG9yLCBwb3B1cFNlcnZpY2UpO1xuICAgIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJtb25hLWRhdGUtcGlja2VyXCIgW25nQ2xhc3NdPVwieydtb25hLWRpc2FibGVkJzogZGlzYWJsZWR9XCIgI3BvcHVwQW5jaG9yPlxuICAgIDxtb25hLXRleHQtYm94IFtkaXNhYmxlZF09XCJkaXNhYmxlZFwiIFtyZWFkb25seV09XCJyZWFkb25seVwiIFtuZ01vZGVsXT1cImN1cnJlbnREYXRlU3RyaW5nXCIgKG5nTW9kZWxDaGFuZ2UpPVwib25EYXRlU3RyaW5nRWRpdCgkZXZlbnQpXCIgKGlucHV0Qmx1cik9XCJvbkRhdGVJbnB1dEJsdXIoKVwiPlxuICAgICAgICA8bmctdGVtcGxhdGUgbW9uYVRleHRCb3hTdWZmaXhUZW1wbGF0ZT5cbiAgICAgICAgICAgIDxidXR0b24gbW9uYUJ1dHRvbiBbZmxhdF09XCJ0cnVlXCIgKGNsaWNrKT1cIm9uRGF0ZUlucHV0QnV0dG9uQ2xpY2soKVwiIFtkaXNhYmxlZF09XCJkaXNhYmxlZFwiIFt0YWJJbmRleF09XCItMVwiPlxuICAgICAgICAgICAgICAgIDxmYS1pY29uIFtpY29uXT1cImRhdGVJY29uXCI+PC9mYS1pY29uPlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgPC9tb25hLXRleHQtYm94PlxuPC9kaXY+XG5cbjxuZy10ZW1wbGF0ZSAjZGF0ZVBvcHVwVGVtcGxhdGU+XG4gICAgPG1vbmEtY2FsZW5kYXIgW2Rpc2FibGVkRGF0ZXNdPVwiZGlzYWJsZWREYXRlc1wiIFttaW5dPVwibWluXCIgW21heF09XCJtYXhcIiBbdmFsdWVdPVwidmFsdWVcIiAodmFsdWVDaGFuZ2UpPVwib25DYWxlbmRhclZhbHVlQ2hhbmdlKCRldmVudClcIj48L21vbmEtY2FsZW5kYXI+XG48L25nLXRlbXBsYXRlPlxuIl19