import { Component, ContentChild, ContentChildren, EventEmitter, Input, Output, QueryList, TemplateRef, ViewChild } from "@angular/core";
import { MenuItemComponent } from "../../../../../menus/modules/shared-menu/components/menu-item/menu-item.component";
import { Subject, takeUntil } from "rxjs";
import { SplitButtonTextTemplateDirective } from "../../directives/split-button-text-template.directive";
import { faChevronDown } from "@fortawesome/free-solid-svg-icons";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../../../../menus/modules/context-menu/components/context-menu/context-menu.component";
import * as i3 from "../../../button/directives/button.directive";
import * as i4 from "@fortawesome/angular-fontawesome";
export class SplitButtonComponent {
    constructor(cdr) {
        this.cdr = cdr;
        this.componentDestroy$ = new Subject();
        this.menuIcon = faChevronDown;
        this.menuItems = [];
        this.popupOffset = {
            horizontal: 0,
            vertical: 0.5
        };
        this.popupWidth = 0;
        this.buttonClick = new EventEmitter();
        this.disabled = false;
        this.menuItemComponents = new QueryList();
        this.text = "";
        this.textTemplate = null;
    }
    ngAfterContentInit() {
        this.menuItems = this.menuItemComponents.map(m => m.getMenuItem());
        this.menuItemComponents.changes.pipe(takeUntil(this.componentDestroy$)).subscribe(() => {
            this.menuItems = this.menuItemComponents.map(m => m.getMenuItem());
        });
    }
    ngAfterViewInit() {
        window.setTimeout(() => {
            this.popupWidth = this.wrapperElementRef.nativeElement.getBoundingClientRect().width - 1;
            this.popupOffset.horizontal = -this.mainButtonElementRef.nativeElement.offsetWidth - 1;
            this.contextMenuComponent.setPrecise(false);
            this.cdr.detectChanges();
        });
    }
    ngOnDestroy() {
        this.componentDestroy$.next();
        this.componentDestroy$.complete();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: SplitButtonComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.0", type: SplitButtonComponent, selector: "mona-split-button", inputs: { disabled: "disabled", text: "text" }, outputs: { buttonClick: "buttonClick" }, queries: [{ propertyName: "textTemplate", first: true, predicate: SplitButtonTextTemplateDirective, descendants: true, read: TemplateRef }, { propertyName: "menuItemComponents", predicate: MenuItemComponent }], viewQueries: [{ propertyName: "contextMenuComponent", first: true, predicate: ["contextMenuComponent"], descendants: true }, { propertyName: "mainButtonElementRef", first: true, predicate: ["mainButton"], descendants: true }, { propertyName: "wrapperElementRef", first: true, predicate: ["wrapperElementRef"], descendants: true }], ngImport: i0, template: "<div class=\"mona-split-button\" #wrapperElementRef>\n    <button monaButton (click)=\"buttonClick.emit()\" [disabled]=\"disabled\" tabindex=\"0\" #mainButton>\n        <span class=\"mona-slit-button-text\" *ngIf=\"!textTemplate\">{{text}}</span>\n        <ng-container [ngTemplateOutlet]=\"textTemplate\" *ngIf=\"textTemplate\"></ng-container>\n    </button>\n    <button monaButton [disabled]=\"disabled\" tabindex=\"0\" #menuButton>\n        <fa-icon [icon]=\"menuIcon\"></fa-icon>\n    </button>\n    <mona-contextmenu [target]=\"menuButton\" trigger=\"click\" [minWidth]=\"popupWidth\" [offset]=\"popupOffset\" popupClass=\"mona-split-button-popup\"\n                      [menuItems]=\"menuItems\" #contextMenuComponent ></mona-contextmenu>\n</div>\n", styles: ["div.mona-split-button{display:flex;align-items:center;background-color:var(--mona-background);border:1px solid var(--mona-border-color);height:var(--mona-input-height);width:-moz-fit-content;width:fit-content}div.mona-split-button>[monaButton]{height:calc(100% - 2px);border-left:none;border-right:none}div.mona-split-button>[monaButton]:first-child{border-right:1px solid var(--mona-border-color)}div.mona-split-button>[monaButton]:nth-child(2)>span{font-size:18px;display:inline-block;transform-origin:center;transform:rotate(90deg)}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i2.ContextMenuComponent, selector: "mona-contextmenu", inputs: ["menuItems", "minWidth", "offset", "popupClass", "target", "trigger", "width"], outputs: ["close", "navigate", "open"] }, { kind: "directive", type: i3.ButtonDirective, selector: "[monaButton]", inputs: ["disabled", "flat", "primary", "selected", "toggleable"], outputs: ["selectedChange"] }, { kind: "component", type: i4.FaIconComponent, selector: "fa-icon", inputs: ["icon", "title", "spin", "pulse", "mask", "styles", "flip", "size", "pull", "border", "inverse", "symbol", "rotate", "fixedWidth", "classes", "transform", "a11yRole"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: SplitButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: "mona-split-button", template: "<div class=\"mona-split-button\" #wrapperElementRef>\n    <button monaButton (click)=\"buttonClick.emit()\" [disabled]=\"disabled\" tabindex=\"0\" #mainButton>\n        <span class=\"mona-slit-button-text\" *ngIf=\"!textTemplate\">{{text}}</span>\n        <ng-container [ngTemplateOutlet]=\"textTemplate\" *ngIf=\"textTemplate\"></ng-container>\n    </button>\n    <button monaButton [disabled]=\"disabled\" tabindex=\"0\" #menuButton>\n        <fa-icon [icon]=\"menuIcon\"></fa-icon>\n    </button>\n    <mona-contextmenu [target]=\"menuButton\" trigger=\"click\" [minWidth]=\"popupWidth\" [offset]=\"popupOffset\" popupClass=\"mona-split-button-popup\"\n                      [menuItems]=\"menuItems\" #contextMenuComponent ></mona-contextmenu>\n</div>\n", styles: ["div.mona-split-button{display:flex;align-items:center;background-color:var(--mona-background);border:1px solid var(--mona-border-color);height:var(--mona-input-height);width:-moz-fit-content;width:fit-content}div.mona-split-button>[monaButton]{height:calc(100% - 2px);border-left:none;border-right:none}div.mona-split-button>[monaButton]:first-child{border-right:1px solid var(--mona-border-color)}div.mona-split-button>[monaButton]:nth-child(2)>span{font-size:18px;display:inline-block;transform-origin:center;transform:rotate(90deg)}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { buttonClick: [{
                type: Output
            }], contextMenuComponent: [{
                type: ViewChild,
                args: ["contextMenuComponent"]
            }], disabled: [{
                type: Input
            }], mainButtonElementRef: [{
                type: ViewChild,
                args: ["mainButton"]
            }], menuItemComponents: [{
                type: ContentChildren,
                args: [MenuItemComponent]
            }], text: [{
                type: Input
            }], textTemplate: [{
                type: ContentChild,
                args: [SplitButtonTextTemplateDirective, { read: TemplateRef }]
            }], wrapperElementRef: [{
                type: ViewChild,
                args: ["wrapperElementRef"]
            }] } });
//# sourceMappingURL=data:application/json;base64,